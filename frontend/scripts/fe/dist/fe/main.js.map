{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/commons/constants/api.constants.ts","webpack:///./src/app/commons/constants/conf.constants.ts","webpack:///./src/app/commons/forms/books.forms.ts","webpack:///./src/app/commons/forms/comment.forms.ts","webpack:///./src/app/commons/forms/email.forms.ts","webpack:///./src/app/commons/forms/login.forms.ts","webpack:///./src/app/commons/forms/password.forms.ts","webpack:///./src/app/commons/forms/register.forms.ts","webpack:///./src/app/commons/forms/search.forms.ts","webpack:///./src/app/commons/forms/user.forms.ts","webpack:///./src/app/commons/models/book.model.ts","webpack:///./src/app/commons/models/comment.ts","webpack:///./src/app/commons/models/edit-email.model.ts","webpack:///./src/app/commons/models/edit-password.model.ts","webpack:///./src/app/commons/models/forgot-password.model.ts","webpack:///./src/app/commons/models/login.model.ts","webpack:///./src/app/commons/models/register.model.ts","webpack:///./src/app/commons/models/reset-password.model.ts","webpack:///./src/app/commons/models/search.model.ts","webpack:///./src/app/commons/models/user.model.ts","webpack:///./src/app/commons/services/auth/auth.service.ts","webpack:///./src/app/commons/services/auth/user.service.ts","webpack:///./src/app/commons/services/books/books.service.ts","webpack:///./src/app/commons/services/interceptors/token.service.ts","webpack:///./src/app/commons/services/navigation/navigation.service.ts","webpack:///./src/app/commons/utils/app.states.ts","webpack:///./src/app/commons/utils/http.utils.ts","webpack:///./src/app/commons/utils/layout.utils.ts","webpack:///./src/app/commons/utils/security.utils.ts","webpack:///./src/app/components/books/add-book/add-book.component.css","webpack:///./src/app/components/books/add-book/add-book.component.html","webpack:///./src/app/components/books/add-book/add-book.component.ts","webpack:///./src/app/components/books/books.module.ts","webpack:///./src/app/components/books/books.states.ts","webpack:///./src/app/components/books/borrowed-books/borrowed-books.component.css","webpack:///./src/app/components/books/borrowed-books/borrowed-books.component.html","webpack:///./src/app/components/books/borrowed-books/borrowed-books.component.ts","webpack:///./src/app/components/books/owned-books/owned-books.component.css","webpack:///./src/app/components/books/owned-books/owned-books.component.html","webpack:///./src/app/components/books/owned-books/owned-books.component.ts","webpack:///./src/app/components/partials/footer/footer.component.css","webpack:///./src/app/components/partials/footer/footer.component.html","webpack:///./src/app/components/partials/footer/footer.component.ts","webpack:///./src/app/components/partials/modals/add-book-messages/add-book-messages.component.css","webpack:///./src/app/components/partials/modals/add-book-messages/add-book-messages.component.html","webpack:///./src/app/components/partials/modals/add-book-messages/add-book-messages.component.ts","webpack:///./src/app/components/partials/modals/book-details/book-details.component.css","webpack:///./src/app/components/partials/modals/book-details/book-details.component.html","webpack:///./src/app/components/partials/modals/book-details/book-details.component.ts","webpack:///./src/app/components/partials/modals/confirmation-message/confirmation-message.component.css","webpack:///./src/app/components/partials/modals/confirmation-message/confirmation-message.component.html","webpack:///./src/app/components/partials/modals/confirmation-message/confirmation-message.component.ts","webpack:///./src/app/components/partials/modals/update-book/update-book.component.css","webpack:///./src/app/components/partials/modals/update-book/update-book.component.html","webpack:///./src/app/components/partials/modals/update-book/update-book.component.ts","webpack:///./src/app/components/partials/navigation/navigation.component.css","webpack:///./src/app/components/partials/navigation/navigation.component.html","webpack:///./src/app/components/partials/navigation/navigation.component.ts","webpack:///./src/app/components/partials/partials.module.ts","webpack:///./src/app/components/partials/side-menu/side-menu.component.css","webpack:///./src/app/components/partials/side-menu/side-menu.component.html","webpack:///./src/app/components/partials/side-menu/side-menu.component.ts","webpack:///./src/app/components/public/forgot-password/forgot-password.component.css","webpack:///./src/app/components/public/forgot-password/forgot-password.component.html","webpack:///./src/app/components/public/forgot-password/forgot-password.component.ts","webpack:///./src/app/components/public/login/login.component.css","webpack:///./src/app/components/public/login/login.component.html","webpack:///./src/app/components/public/login/login.component.ts","webpack:///./src/app/components/public/public.module.ts","webpack:///./src/app/components/public/public.states.ts","webpack:///./src/app/components/public/register/register.component.css","webpack:///./src/app/components/public/register/register.component.html","webpack:///./src/app/components/public/register/register.component.ts","webpack:///./src/app/components/public/reset-password/reset-password.component.css","webpack:///./src/app/components/public/reset-password/reset-password.component.html","webpack:///./src/app/components/public/reset-password/reset-password.component.ts","webpack:///./src/app/components/users/dashboard/dashboard.component.css","webpack:///./src/app/components/users/dashboard/dashboard.component.html","webpack:///./src/app/components/users/dashboard/dashboard.component.ts","webpack:///./src/app/components/users/settings/settings.component.css","webpack:///./src/app/components/users/settings/settings.component.html","webpack:///./src/app/components/users/settings/settings.component.ts","webpack:///./src/app/components/users/users.module.ts","webpack:///./src/app/components/users/users.states.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <ui-view name=\\\"sidemenu\\\"></ui-view>\\r\\n  <main>\\r\\n    <ui-view name=\\\"navigation\\\"></ui-view>\\r\\n    <ui-view name=\\\"content\\\"></ui-view>\\r\\n    <ui-view name=\\\"footer\\\"></ui-view>\\r\\n  </main>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Library';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UIRouterModule } from '@uirouter/angular';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { SimpleModalModule } from 'ngx-simple-modal';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UsersModule } from './components/users/users.module';\r\nimport { APP_STATES } from './commons/utils/app.states';\r\nimport { PartialsModule } from './components/partials/partials.module';\r\nimport { DatePipe, DecimalPipe } from '@angular/common';\r\nimport { PublicModule } from './components/public/public.module';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { TokenService } from './commons/services/interceptors/token.service';\r\nimport { BooksModule } from './components/books/books.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    UIRouterModule.forRoot(APP_STATES),\r\n    SimpleModalModule,\r\n    NgbModule.forRoot(),\r\n\r\n    PublicModule,\r\n    PartialsModule,\r\n    UsersModule,\r\n    BooksModule\r\n  ],\r\n  exports : [],\r\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: TokenService, multi: true },\r\n    DatePipe, DecimalPipe, CookieService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { urlsafe } from '../utils/http.utils';\r\n\r\n/* USERS ENDPOINTS\r\n */\r\nexport const USERS = '/api/users/';\r\n\r\n/* AUTH ENDPOINTS\r\n */\r\nexport const AUTH_USER = urlsafe(USERS, 'auth');\r\nexport const AUTH_USER_ID = urlsafe(USERS, 'auth-user');\r\nexport const CHANGE_PASSWORD = urlsafe(AUTH_USER, 'password');\r\nexport const CHANGE_EMAIL = urlsafe(AUTH_USER, 'email');\r\nexport const AUTH_LOGIN = urlsafe(AUTH_USER, 'login');\r\nexport const AUTH_REGISTER = urlsafe(AUTH_USER, 'register');\r\nexport const NEW_USER = urlsafe(AUTH_USER, 'new-user');\r\nexport const FORGOT_PASSWORD = urlsafe(AUTH_USER, 'forgot-password');\r\nexport const RESET_PASSWORD = urlsafe(AUTH_USER, 'reset-password');\r\n\r\n/* BOOKS ENDPOINTS */\r\nexport const BOOKS = '/api/books/';\r\nexport const OWNED_BOOKS = urlsafe(BOOKS, 'owned-books');\r\nexport const ADD_BOOK = urlsafe(BOOKS, 'add-book');\r\nexport const UPDATE_BOOK = urlsafe(BOOKS, 'update-book');\r\nexport const CHECKOUT_BOOK = urlsafe(BOOKS, 'checkout-book');\r\nexport const IS_CHECKED_OUT = urlsafe(BOOKS, 'is-checked-out');\r\nexport const RETURN_BOOK = urlsafe(BOOKS, 'return-book');\r\nexport const BORROWED_BOOKS = urlsafe(BOOKS, 'borrowed-books');\r\n\r\n/** COMMENTS ENDPOINTS */\r\nexport const COMMENTS = urlsafe(BOOKS, 'comments');\r\nexport const ADD_COMMENT = urlsafe(BOOKS, 'add-comment');\r\nexport const DELETE_COMMENT = urlsafe(BOOKS, 'delete-comment');\r\n","// TODO: make it dynamic. generate every login. (it looks cool)\n// 18 random characters (alphanumeric + special characters + token)\nexport const AUTH_KEY = 'NCqrSTxQCGMK2wDvRL';\n\n","import { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\nexport class BookForm {\r\n  public form: FormGroup;\r\n  public err: string = null;\r\n  public submitted: Boolean = false;\r\n\r\n  constructor (data) {\r\n    /* Initialize the form builder\r\n     */\r\n    this.form = new FormBuilder().group({\r\n      title           : new FormControl(data.title, [Validators.required]),\r\n      author          : new FormControl(data.author, [Validators.required]),\r\n      owner           : new FormControl(data.owner),\r\n      is_digital_copy : new FormControl(data.is_digital_copy),\r\n      location        : new FormControl(data.location, [Validators.required]),\r\n      status          : new FormControl(data.status, [Validators.required]),\r\n    });\r\n  }\r\n\r\n  /* Check if form field is valid\r\n   */\r\n  valid (f) {\r\n    return !(!this.form.get(f).valid && this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* Check if the form field has an error\r\n   */\r\n  hasError (f, e) {\r\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* DEFAULT VALUE\r\n   * set the value of the form fields if there is a default value.\r\n   */\r\n  defaultValue (d) {\r\n    // set a timeout just incase that the value is not yet ready.\r\n    this.form.patchValue(d);\r\n  }\r\n\r\n}\r\n\r\nexport class UpdateBookForm {\r\n  public form: FormGroup;\r\n  public err: string = null;\r\n  public submitted: Boolean = false;\r\n\r\n  constructor (data) {\r\n    /* Initialize the form builder\r\n     */\r\n    this.form = new FormBuilder().group({\r\n      id              : new FormControl(data.id),\r\n      title           : new FormControl(data.title, [Validators.required]),\r\n      is_digital_copy : new FormControl(data.is_digital_copy),\r\n      author          : new FormControl(data.author, [Validators.required]),\r\n      location        : new FormControl(data.location, [Validators.required])\r\n    });\r\n  }\r\n\r\n  /* Check if form field is valid\r\n   */\r\n  valid (f) {\r\n    return !(!this.form.get(f).valid && this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* Check if the form field has an error\r\n   */\r\n  hasError (f, e) {\r\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* DEFAULT VALUE\r\n   * set the value of the form fields if there is a default value.\r\n   */\r\n  defaultValue (d) {\r\n    // set a timeout just incase that the value is not yet ready.\r\n    this.form.patchValue(d);\r\n  }\r\n\r\n}\r\n\r\n","import { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\nexport class CommentForm {\r\n  public form: FormGroup;\r\n  public err: string = null;\r\n  public submitted: Boolean = false;\r\n\r\n  constructor (data) {\r\n    /* Initialize the form builder\r\n     */\r\n    this.form = new FormBuilder().group({\r\n      message       : new FormControl(data.message, [Validators.required]),\r\n      book_id      : new FormControl(data.book_id, [Validators.required]),\r\n      user       : new FormControl(data.user),\r\n    });\r\n  }\r\n\r\n  /* Check if form field is valid\r\n   */\r\n  valid (f) {\r\n    return !(!this.form.get(f).valid && this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* Check if the form field has an error\r\n   */\r\n  hasError (f, e) {\r\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* DEFAULT VALUE\r\n   * set the value of the form fields if there is a default value.\r\n   */\r\n  defaultValue (d) {\r\n    // set a timeout just incase that the value is not yet ready.\r\n    this.form.patchValue(d);\r\n  }\r\n\r\n}\r\n","import { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\n// Class for edit email form\n\nexport class EditEmailForm {\n    public form: FormGroup;\n    public err: string = null;\n    public submitted: Boolean = false;\n\n    constructor (data) {\n      /* Initialize the form builder\n       */\n      this.form = new FormBuilder().group({\n          email : new FormControl(null, [Validators.required, Validators.email]),\n      });\n    }\n\n    /* Check if form field is valid\n     */\n    valid (f) {\n      return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\n    }\n\n    /* Check if the form field has an error\n     */\n    hasError (f, e) {\n      return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\n    }\n  }","import * as _ from 'lodash';\n\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n\nexport class LoginForm {\n  public form: FormGroup;\n  public err: string = null;\n  public submitted: Boolean = false;\n\n  constructor (data) {\n    /* Initialize the form builder\n    */\n    this.form = new FormBuilder().group({\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      password : new FormControl(null, [Validators.required])\n    });\n  }\n\n  /* Check if form field is valid\n   */\n  valid (f) {\n    return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\n  }\n\n  /* Check if the form field has an error\n   */\n  hasError (f, e) {\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\n  }\n\n}","import { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\n\n\n// Class for edit password form\nexport class EditPasswordForm {\n    public form: FormGroup;\n    public err: string = null;\n    public submitted: Boolean = false;\n    // Password must contain at least one letter, one number, and one symbol.. \n    public pattern: string = \"[^\\w\\d]*(([0-9]+.*[A-Za-z]+.*[#$@!%&*?_]+.*)|[A-Za-z]+.*([0-9]+.*)[#$@!%&*?_]+.*|[A-Za-z]+.*[#$@!%&*?_]+.*([0-9]+.*)|[#$@!%&*?_]+.*([0-9]+.*)[A-Za-z]+.*)\";\n    //Validators.pattern(this.pattern)\n    constructor (data) {\n      /* Initialize the form builder\n       */\n\n      this.form = new FormBuilder().group({\n          old_password : new FormControl(null, [Validators.required]),\n          new_password : new FormControl(null, [Validators.required, Validators.minLength(8),]),\n          confirm_new_password : new FormControl(null, [Validators.required, Validators.minLength(8),])\n      })\n    }\n\n    /* Check if form field is valid\n     */\n    valid (f) {\n      return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\n    }\n\n    /* Check if the form field has an error\n     */\n    hasError (f, e) {\n      return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\n    }\n  }\n\n// Class for add password form\nexport class AddPasswordForm {\n    public form: FormGroup;\n    public err: string = null;\n    public submitted: Boolean = false;\n\n    constructor (data) {\n      /* Initialize the form builder\n       */\n      this.form = new FormBuilder().group({\n          new_password : new FormControl(null, [Validators.required]),\n          confirm_new_password : new FormControl(null, [Validators.required])\n      })\n    }\n\n    /* Check if form field is valid\n     */\n    valid (f) {\n      return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\n    }\n\n    /* Check if the form field has an error\n     */\n    hasError (f, e) {\n      return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\n    }\n\n  }\n\n\n\n  export class ForgotPasswordForm {\n    public form: FormGroup;\n    public err: string = null;\n    public submitted: Boolean = false;\n\n    constructor (data) {\n      /* Initialize the form builder\n       */\n      this.form = new FormBuilder().group({\n          email : new FormControl(null, [Validators.required, Validators.email]),\n      })\n    }\n\n    /* Check if form field is valid\n     */\n    valid (f) {\n      return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\n    }\n\n    /* Check if the form field has an error\n     */\n    hasError (f, e) {\n      return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\n    }\n\n  }\n\n\n  export class ResetPasswordForm {\n    public form: FormGroup;\n    public err: string = null;\n    public submitted: Boolean = false;\n\n    constructor (data) {\n      /* Initialize the form builder\n       */\n      this.form = new FormBuilder().group({\n          new_password : new FormControl(null, [Validators.required]),\n          confirm_new_password : new FormControl(null, [Validators.required]),\n      })\n    }\n\n    /* Check if form field is valid\n     */\n    valid (f) {\n      return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\n    }\n\n    /* Check if the form field has an error\n     */\n    hasError (f, e) {\n      return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\n    }\n\n  }","import * as _ from 'lodash';\n\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n\nexport class RegisterForm {\n  public form: FormGroup;\n  public err: string = null;\n  public submitted: Boolean = false;\n\n  constructor (data) {\n    /* Initialize the form builder\n    */\n    this.form = new FormBuilder().group({\n      first_name    : new FormControl(null, [Validators.required]),\n      last_name    : new FormControl(null, [Validators.required]),\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      username    : new FormControl(null, [Validators.required]),\n      password : new FormControl(null, [Validators.required]),\n      confirm_password : new FormControl(null, [Validators.required]),\n    });\n  }\n\n  /* Check if form field is valid\n   */\n  valid (f) {\n    return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\n  }\n\n  /* Check if the form field has an error\n   */\n  hasError (f, e) {\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\n  }\n}","import { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\nexport class SearchForm {\r\n    public form: FormGroup;\r\n    public err: string = null;\r\n    public submitted: Boolean = false;\r\n\r\n    constructor (data) {\r\n      /* Initialize the form builder\r\n       */\r\n      this.form = new FormBuilder().group({\r\n          search_text : new FormControl(null, [Validators.required]),\r\n      });\r\n    }\r\n\r\n    /* Check if form field is valid\r\n     */\r\n    valid (f) {\r\n      return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\r\n    }\r\n\r\n    /* Check if the form field has an error\r\n     */\r\n    hasError (f, e) {\r\n      return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\r\n    }\r\n  }","import { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n\nexport class UserForm {\n  public form: FormGroup;\n  public err: string = null;\n  public submitted: Boolean = false;\n\n  constructor (data) {\n    /* Initialize the form builder\n     */\n    this.form = new FormBuilder().group({\n      email        : new FormControl(data.email, [Validators.required, Validators.email]),\n      first_name   : new FormControl(data.first_name, [Validators.required]),\n      last_name    : new FormControl(data.last_name, [Validators.required]),\n      username    : new FormControl(data.username, [Validators.required]),\n      color : new FormControl(),\n    })\n  }\n\n  /* Check if form field is valid\n   */\n  valid (f) {\n    return !(!this.form.get(f).valid && this.form.get(f).touched && this.submitted);\n  }\n\n  /* Check if the form field has an error\n   */\n  hasError (f, e) {\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched && this.submitted);\n  }\n\n  /* DEFAULT VALUE\n   * set the value of the form fields if there is a default value.\n   */\n  defaultValue (d) {\n    // set a timeout just incase that the value is not yet ready.\n    this.form.patchValue(d);\n  }\n\n}\n","// export class DeleteCard {\r\n\r\n//     customer_token : string = null;\r\n//     card_token: string = null;\r\n\r\n//     constructor(data={}) {\r\n//       Object.assign(this, data);\r\n//     }\r\n//   }\r\n\r\nexport class Books {\r\n\r\n    title : string = null;\r\n    author: string = null;\r\n    location : string = null;\r\n    is_digital_copy : boolean = null;\r\n    owner: Number = null;\r\n    status : string = null;\r\n\r\n    constructor(data={}) {\r\n      Object.assign(this, data);\r\n    }\r\n}","/* Model class for addPassword\n */\nexport class CommentModel {\n    message : string = null;\n    user: string = null;\n    book_id: string = null;\n\n    constructor(data={}) {\n        Object.assign(this, data);\n    }\n}","/* Model class for edit email.\n */\nexport class EditEmailModel {\n\n    email: string = null;\n\n    constructor (data={}) {\n      Object.assign(this, data);\n    }\n};","/* Model class for editPassword\n */\nexport class EditPasswordModel {\n    old_password : string = null;\n    new_password : string = null;\n    confirm_new_password : string = null;\n\n    constructor(data={}) {\n        Object.assign(this, data);\n    }\n  }","/* Model class for editPassword\n */\nexport class ForgotPasswordModel {\n    email : string = null;\n\n    constructor(data={}) {\n        Object.assign(this, data);\n    }\n  }","/* Model class for signing in.\n */\nexport class Login {\n    email    : string = null;\n    password : string = null;\n\n    constructor (data={}) {\n      Object.assign(this, data);\n    }\n  }","/* Model class for signing in.\n */\nexport class Register {\n    email    : string = null;\n    first_name    : string = null;\n    last_name    : string = null;\n    username    : string = null;\n    password : string = null;\n    confirm_password : string = null;\n\n    constructor (data={}) {\n      Object.assign(this, data);\n    }\n  }","/* Model class for editPassword\n */\nexport class ResetPasswordModel {\n    token: string = null;\n    new_password : string = null;\n    confirm_new_password : string = null;\n\n    constructor(data={}) {\n        Object.assign(this, data);\n    }\n  }","\r\nexport class SearchModel {\r\n\r\n    search_text: string = null;\r\n\r\n    constructor (data={}) {\r\n      Object.assign(this, data);\r\n    }\r\n};","/* Model class for User */\nexport class User {\n    id            : string = null;\n    email         : string = null;\n    username      : string = null;\n    first_name    : string = null;\n    last_name     : string = null;\n    full_name     : string = null;\n    has_usable_pass : boolean = null;\n    icon         : any = null;\n    date_joined  : string = null;\n    date_updated : string = null;\n    permission   : string = null;\n    live_count   : number = null;\n    backtest_count: number = null;\n\n    constructor(data={}) {\n      Object.assign(this, data);\n    }\n}\n\n\nexport class ShortUser {\n    id          : string = null;\n    email       : string = null; \n    username    : string = null;\n    first_name  : string = null;\n    full_name   : string = null;\n    last_name   : string = null;\n    avatar       : string = null;\n}","import * as _ from 'lodash';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { AUTH_LOGIN, AUTH_USER, AUTH_REGISTER, FORGOT_PASSWORD, RESET_PASSWORD, NEW_USER, AUTH_USER_ID } from '../../constants/api.constants';\r\nimport { AUTH_KEY } from '../../constants/conf.constants';\r\nimport { User } from '../../models/user.model';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  public user = new User;\r\n  public user_id:any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n\r\n  /* USER LOGIN\r\n   * @desc : sends a request to the backend server to\r\n   *         to check for the credentials and returns\r\n   *         a generated token.\r\n   */\r\n  login(creds) {\r\n    return this.http.post(AUTH_LOGIN, creds)\r\n      .toPromise()\r\n      .then(resp => { this.setToken(resp); this.authUser(Object(resp).user_id); return resp; })\r\n      .catch(err => { console.log(err); return Promise.reject(err); })\r\n    ;\r\n  }\r\n  /* Forgot Password */\r\n  forgotPassword(data){\r\n    return this.http.post(FORGOT_PASSWORD, data)\r\n      .toPromise()\r\n      .then(resp=>{ return resp; })\r\n      .catch(err=> { return Promise.reject(err); })\r\n  }\r\n\r\n  /* Forgot Password */\r\n  resetPassword(data){\r\n    return this.http.post(RESET_PASSWORD, data)\r\n      .toPromise()\r\n      .then(resp=>{ return resp; })\r\n      .catch(err=> { return Promise.reject(err); })\r\n  }\r\n\r\n  /**REGISTER USER */\r\n  register(creds){\r\n    return this.http.post(AUTH_REGISTER, creds)\r\n    .toPromise()\r\n    .then(resp=>{ return resp; })\r\n    .catch(err=>{ return Promise.reject(err); });\r\n\r\n  }\r\n\r\n  /**NEW USER */\r\n  newUser(creds){\r\n    return this.http.post(NEW_USER, creds)\r\n    .toPromise()\r\n    .then(resp=>{ this.setToken(resp); this.authUser(Object(resp).user_id); return resp; })\r\n    .catch(err=>{ return Promise.reject(err); });\r\n  }\r\n\r\n  /* MANAGE USER TOKEN\r\n   * @desc : manage user token generated from the backend\r\n   *         to be used on authenticated requests\r\n   */\r\n  setToken(token) {\r\n    // save the generated token to the local storage\r\n    (<any>window).localStorage[AUTH_KEY] = JSON.stringify(token);\r\n    return;\r\n  }\r\n\r\n  getToken() {\r\n    // fetch the generated token from the storage\r\n    let d = (<any>window).localStorage[AUTH_KEY];\r\n    if (!d) return null;\r\n\r\n    return JSON.parse(d);\r\n  }\r\n\r\n  getUser(){\r\n    this.user_id = this.getToken().user_id;\r\n    if(this.user.id === \"\"){\r\n      this.authUser(this.user_id);\r\n    }\r\n  }\r\n\r\n  rmToken() {\r\n    // clear the token from the local storage.\r\n    (<any>window).localStorage.clear();\r\n  }\r\n\r\n  /* MANAGE USER INSTANCE\r\n   * @desc : manage user instance.\r\n   */\r\n  authenticated() {\r\n    // check if the user is authenticated\r\n    return this.getToken() ? true : false;\r\n  }\r\n\r\n  setuser() {\r\n    // save the user's instance\r\n    return this.http.get(AUTH_USER)\r\n      .toPromise()\r\n      .then(resp => { this.user=new User(resp); })\r\n      .catch(err=> { return Promise.reject(err); })\r\n    ;\r\n  }\r\n\r\n  getuser() {\r\n    // fetch the user instance\r\n    if (this.user.id == null) {\r\n      // sends a request from the backend to\r\n      // get the data.\r\n      this.setuser();\r\n    }\r\n    return this.user;\r\n  }\r\n\r\n  authUser(id){\r\n   this.http.get(AUTH_USER_ID, {params: {'id': id}}).subscribe(\r\n      result=>{\r\n        this.user = new User(result);\r\n      },\r\n      error=>{\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AUTH_USER, CHANGE_PASSWORD, CHANGE_EMAIL } from '../../constants/api.constants';\r\nimport { User } from '../../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /* USER UPDATE\r\n   * @desc : sends a request to the backend server to update\r\n   *         the user's information.\r\n   */\r\n  update(data) {\r\n    return this.http.post(AUTH_USER, data)\r\n      .toPromise()\r\n      .then(resp => { this.auth.user = new User(resp); return resp; })\r\n      .catch(err => { return Promise.reject(err); })\r\n    ;\r\n  }\r\n\r\n  updatePassword(data){\r\n    return this.http.put(CHANGE_PASSWORD, data)\r\n      .toPromise()\r\n      .then(resp => { return resp; } )\r\n      .catch(err => { return Promise.reject(err); })\r\n  }\r\n\r\n  updateEmail(data){\r\n    return this.http.put(CHANGE_EMAIL, data)\r\n      .toPromise()\r\n      .then(resp => { return resp; } )\r\n      .catch(err => { return Promise.reject(err); })\r\n  }\r\n\r\n  addPassword(data){\r\n    return this.http.post(CHANGE_PASSWORD, data)\r\n      .toPromise()\r\n      .then(resp => { return resp; } )\r\n      .catch(err => { return Promise.reject(err); })\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { \r\n  BOOKS, OWNED_BOOKS, ADD_BOOK, \r\n  CHECKOUT_BOOK, \r\n  COMMENTS,\r\n  ADD_COMMENT,\r\n  DELETE_COMMENT,\r\n  IS_CHECKED_OUT,\r\n  BORROWED_BOOKS,\r\n  RETURN_BOOK,\r\n  UPDATE_BOOK} from '../../constants/api.constants'\r\nimport { Books } from '../../models/book.model'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BooksService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n\r\n  getAllBooks(){\r\n    return this.http.get(BOOKS);\r\n  }\r\n\r\n  getBorrowedBooks(){\r\n    return this.http.get(BORROWED_BOOKS);\r\n  }\r\n\r\n  getOwnedBooks(){\r\n    return this.http.get(OWNED_BOOKS);\r\n  }\r\n\r\n  addBook(data: Books){\r\n    return this.http.post(ADD_BOOK, data);\r\n  }\r\n\r\n  updateBook(data: Books){\r\n    return this.http.put(UPDATE_BOOK, data);\r\n  }\r\n\r\n  checkoutBook(data){\r\n    return this.http.post(CHECKOUT_BOOK, data);\r\n  }\r\n\r\n  getAllComments(book_id){\r\n    return this.http.get(COMMENTS, { params: {\"book_id\": book_id}});\r\n  }\r\n\r\n  addComment(data){\r\n    return this.http.post(ADD_COMMENT, data);\r\n  }\r\n\r\n  deleteComment(data){\r\n    return this.http.post(DELETE_COMMENT, data);\r\n  }\r\n\r\n  isCheckedOut(book_id) {\r\n    return this.http.get(IS_CHECKED_OUT, { params: {\"book_id\": book_id}});\r\n  }\r\n\r\n  returnBook(data){\r\n    return this.http.post(RETURN_BOOK, data);\r\n  }\r\n\r\n}\r\n","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport { StateService } from '@uirouter/angular';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { AuthService } from '../auth/auth.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor(\n    private auth  : AuthService,\n    private cookie: CookieService\n  ) { }\n\n  intercept (r: HttpRequest<any>, n: HttpHandler) : Observable <HttpEvent <any>> {\n\n    // const exclude_link = ['/api/users/subscriptions/', '/api/users/auth/forgot-password/',\n    //                      '/api/users/auth/reset-password/', '/api/users/auth/activate-account/'];\n    // if (exclude_link.indexOf(r.url) === -1) {\n    //   r = r.clone({\n    //     setHeaders: {\n    //       'X-CSRFToken'   : this.csrfToken(),\n    //       'Authorization' : this.token(),\n    //     }\n    //   });\n    // }\n    const token = this.auth.getToken();\n    if (token == null) {\n      r = r.clone({\n            setHeaders: {\n              'X-CSRFToken'   : this.csrfToken(),\n            }\n          });\n          return n.handle(r).pipe(tap(\n            resp => {\n              if (resp instanceof HttpResponse) return resp;\n            }\n          ));\n    } else {\n      r = r.clone({\n            setHeaders: {\n              'X-CSRFToken'   : this.csrfToken(),\n              'Authorization' : this.token(),\n            }\n          });\n          return n.handle(r).pipe(tap(\n            resp => {\n              if (resp instanceof HttpResponse) return resp;\n            }\n          ));\n    }\n\n    // return n.handle(r).pipe(tap(\n    //   resp => {\n    //     if (resp instanceof HttpResponse) return resp;\n    //   }\n    // ));\n  }\n\n  // Get user token from the local storage\n  // and format if to be placed into the request header.\n  token () {\n    const t = _.get(this.auth.getToken(), ['token'], null);\n    return `Token ${t}`;\n  }\n\n  csrfToken(){\n    const xtoken = this.cookie.get('csrftoken');\n    return xtoken;\n  }\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavigationService {\r\n\r\n  public headerTitle:string = 'Dashboard'\r\n  public hasLoaded:boolean = false;\r\n  public isLoading: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  changeHeaderTitle(title){\r\n    this.headerTitle = title\r\n  }\r\n}\r\n","import { USER_STATES } from \"src/app/components/users/users.states\";\nimport { PUBLIC_STATES } from \"src/app/components/public/public.states\";\nimport { BOOK_STATES } from \"src/app/components/books/books.states\";\n\n\nexport const APP_STATES = {\n    otherwise : '/login/',\n    states    : [].concat(\n      USER_STATES,\n      PUBLIC_STATES,\n      BOOK_STATES,\n    )\n}\n","/* Re-format the URL parameters for\n * readbility\n */\nexport function urlsafe (url, ...params) {\n    return url.concat(params.join(\"/\"), '/');\n}\n\nexport function queryparams (data) {\n  return \"?\" + Object.keys(data).map(key => `${key}=${encodeURIComponent(data[key])}`).join('&');\n}","import { SideMenuComponent } from \"src/app/components/partials/side-menu/side-menu.component\";\nimport { NavigationComponent } from \"src/app/components/partials/navigation/navigation.component\";\nimport { FooterComponent } from \"src/app/components/partials/footer/footer.component\";\n\n\nexport function ContentOnly(content) {\n    return { content: content };\n}\n\nexport function NavContent(content) {\n    return {\n        sidemenu: SideMenuComponent,\n        navigation: NavigationComponent,\n        content: content,\n        footer: FooterComponent\n    }\n}\n","import * as _ from 'lodash';\n\nimport { AuthService } from '../services/auth/auth.service';\nimport { User } from '../models/user.model';\n\n\n/* LOGIN REQUIRED\n * @desc : callback function that will check and will not pass\n *         users that are not logged in.\n */\nexport function LoginRequired(t) {\n  let auth = t.injector().get(AuthService),\n      state = t.router.stateService;\n\n  if(!auth.authenticated()) return state.target('login');\n\n}\n\n\n/* DISCONNECT\n * @desc : callback function that will log user out.\n *         (removes/clear the user token)\n */\nexport function Disconnect(t) {\n  let auth = t.injector().get(AuthService),\n      state = t.router.stateService;\n\n  if(auth.authenticated())\n  {\n    auth.rmToken();\n    auth.user = new User();\n  }\n  return state.target('login', {next: '/dashboard/'});\n\n}\n\nexport function Deactivate(t) {\n  let auth = t.injector().get(AuthService),\n      state = t.router.stateService;\n\n  if(auth.authenticated())\n  {\n    auth.rmToken();\n    auth.user = new User();\n  }\n  return state.target('log-in', {\"deactivate\": true}, {next: '/dashboard/'});\n\n}\n\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"dashboard--panel\\\">\\r\\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc non dictum libero. Vestibulum sit amet varius nunc. Sed luctus nisl sed auctor fermentum. Fusce porttitor, orci pharetra dictum laoreet, leo nulla malesuada odio, non dictum ante leo vel magna. Nullam sed dignissim quam. </p>\\r\\n  <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n      <div>\\r\\n          <label>Title:</label>\\r\\n          <input class=\\\"form-control\\\" formControlName=\\\"title\\\" type=\\\"text\\\">\\r\\n          <!-- <span [hidden]=\\\"form.valid('title')\\\" class=\\\"text-danger\\\"><p><small>First name is required.</small></p></span> -->\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n          <label>Author:</label>\\r\\n          <input class=\\\"form-control\\\" formControlName=\\\"author\\\" type=\\\"text\\\">\\r\\n          <!-- <span [hidden]=\\\"form.valid('last_name')\\\" class=\\\"text-danger\\\"><p><small>Last name is required.</small></p></span> -->\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <label>Location:</label>\\r\\n        <input class=\\\"form-control\\\" formControlName=\\\"location\\\" type=\\\"text\\\">\\r\\n        <!-- <span [hidden]=\\\"form.valid('last_name')\\\" class=\\\"text-danger\\\"><p><small>Last name is required.</small></p></span> -->\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <div>\\r\\n          <input type=\\\"checkbox\\\" formControlName=\\\"is_digital_copy\\\">\\r\\n          Is Digital Copy\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <br>\\r\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"this.disable\\\">Save</button>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SimpleModalService } from 'ngx-simple-modal';\r\nimport { BookForm } from 'src/app/commons/forms/books.forms';\r\nimport { Books } from 'src/app/commons/models/book.model';\r\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\r\nimport { BooksService } from 'src/app/commons/services/books/books.service';\r\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\r\nimport { AddBookMessagesComponent } from '../../partials/modals/add-book-messages/add-book-messages.component'\r\n@Component({\r\n  selector: 'app-add-book',\r\n  templateUrl: './add-book.component.html',\r\n  styleUrls: ['./add-book.component.css']\r\n})\r\nexport class AddBookComponent implements OnInit {\r\n\r\n  private form: BookForm;\r\n  private default_status = 'available';\r\n\r\n  constructor(\r\n    private nav: NavigationService,\r\n    private booksService: BooksService,\r\n    private authService: AuthService,\r\n    private simpleModalService: SimpleModalService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.nav.changeHeaderTitle('Add Book');\r\n    this.intializeForm();\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: Books, valid: boolean }) {\r\n    if (valid) {\r\n      this.booksService.addBook(value).subscribe(\r\n        data => {\r\n          this.simpleModalService.addModal(AddBookMessagesComponent, {has_error:false}).subscribe();\r\n          this.intializeForm();\r\n        }, error => {\r\n          this.simpleModalService.addModal(AddBookMessagesComponent, {has_error:true}).subscribe();\r\n          this.intializeForm();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  intializeForm() {\r\n    this.form = new BookForm(new Books);\r\n    this.form.form.controls['status'].setValue(this.default_status);\r\n    this.form.form.controls['is_digital_copy'].setValue(false);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddBookComponent } from './add-book/add-book.component';\nimport { BorrowedBooksComponent } from './borrowed-books/borrowed-books.component';\nimport { OwnedBooksComponent } from './owned-books/owned-books.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [AddBookComponent, BorrowedBooksComponent, OwnedBooksComponent]\n})\nexport class BooksModule { }\n","import { NavContent } from \"src/app/commons/utils/layout.utils\";\nimport { LoginRequired } from \"src/app/commons/utils/security.utils\";\nimport { AddBookComponent } from \"./add-book/add-book.component\";\nimport { BorrowedBooksComponent } from \"./borrowed-books/borrowed-books.component\";\nimport { OwnedBooksComponent } from \"./owned-books/owned-books.component\";\n\nexport const BOOK_STATES: Object[] = [\n    {\n        name : 'add-book',\n        url  : '/add-book/',\n        views:  NavContent(AddBookComponent),\n        onEnter: LoginRequired\n    },\n    {\n        name : 'borrowed-books',\n        url  : '/borrowed-books/',\n        views:  NavContent(BorrowedBooksComponent),\n        onEnter: LoginRequired\n    },\n    {\n        name : 'owned-books',\n        url  : '/owned-books/',\n        views:  NavContent(OwnedBooksComponent),\n        onEnter: LoginRequired\n    },\n]\n","module.exports = \"\"","module.exports = \"<div class=\\\"dashboard--panel\\\">\\r\\n    <form class=\\\"form-group\\\" [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n        <div class=\\\"input-group mb-3\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"search_text\\\" class=\\\"form-control\\\" placeholder=\\\"Search Title\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon2\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary\\\" type=\\\"submit\\\"><i class=\\\"la la-search\\\"></i></button>\\r\\n            </div>\\r\\n            <div class=\\\"input-group-append\\\" ngbDropdown>\\r\\n                <button class=\\\"btn btn-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle><i class=\\\"la la-filter\\\"></i> Filter</button>\\r\\n                <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\" >\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\".\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'all')\\\">All</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'available')\\\">Returned</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'checked out')\\\">Checked Out</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n    <div class=\\\"mt-4\\\">\\r\\n        <ul class=\\\"responsive-table pl-0\\\">\\r\\n          <li class=\\\"table-header\\\">\\r\\n            <div class=\\\"col col-1 font-weight-bold\\\">Book</div>\\r\\n            <div class=\\\"col col-2 font-weight-bold\\\">Location</div>\\r\\n            <div class=\\\"col col-3 font-weight-bold\\\">Status</div>\\r\\n            <div class=\\\"col col-4 font-weight-bold\\\">Owner</div>\\r\\n            <div class=\\\"col col-5 font-weight-bold\\\">Checkout Date</div>\\r\\n            <div class=\\\"col col-6 font-weight-bold\\\">Return Date</div>\\r\\n          </li>\\r\\n          <li class=\\\"table-row\\\" *ngFor=\\\"let item of books_list\\\" (click)=\\\"rowClicked(item.book)\\\">\\r\\n            <div class=\\\"col col-1\\\">\\r\\n                <p class=\\\"mb-0 font-weight-bold\\\">{{ item.book.title | titlecase }} </p>\\r\\n                <small class=\\\"text-muted\\\">by: {{ item.book.author | titlecase }}</small>\\r\\n            </div>\\r\\n            <div class=\\\"col col-2\\\"><p class=\\\"mb-0 mt-3\\\">{{ item.book.location | titlecase }}</p></div>\\r\\n            <div class=\\\"col col-3\\\">\\r\\n                <p class=\\\"badge badge-pill mb-0 mt-3 badge-info\\\"  *ngIf=\\\"item.returned_date !== null\\\"style=\\\"color: white;\\\">\\r\\n                    Returned\\r\\n                </p>\\r\\n\\r\\n                <p class=\\\"badge badge-pill mb-0 mt-3 badge-danger\\\"  *ngIf=\\\"item.returned_date === null\\\"style=\\\"color: white;\\\">\\r\\n                    Checked Out\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col col-4\\\">\\r\\n                <p class=\\\"mb-0 mt-3\\\">{{ item.book.owner.full_name | titlecase }}</p>\\r\\n            </div>\\r\\n            <div class=\\\"col col-5\\\">\\r\\n                <p class=\\\"mb-0 mt-3\\\">{{ item.checked_out_date | date:\\\"medium\\\" }}</p>\\r\\n            </div>\\r\\n            <div class=\\\"col col-6\\\">\\r\\n                <button type=\\\"button\\\" \\r\\n                        class=\\\"btn btn-secondary btn-sm\\\"  \\r\\n                        [hidden]=\\\"item.returned_date !== null\\\" \\r\\n                        (click)=\\\"returnBook(item)\\\">Return Book</button> \\r\\n                <p class=\\\"mb-0 mt-3\\\" [hidden]=\\\"item.returned_date === null\\\">{{ item.returned_date | date:\\\"medium\\\" }}</p>\\r\\n            </div>\\r\\n          </li>\\r\\n          \\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BooksService } from 'src/app/commons/services/books/books.service';\r\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\r\n\r\nimport { SearchForm } from 'src/app/commons/forms/search.forms';\r\nimport { SearchModel } from 'src/app/commons/models/search.model';\r\nimport { SimpleModalService } from 'ngx-simple-modal';\r\nimport { BookDetailsComponent } from '../../partials/modals/book-details/book-details.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-borrowed-books',\r\n  templateUrl: './borrowed-books.component.html',\r\n  styleUrls: ['./borrowed-books.component.css']\r\n})\r\nexport class BorrowedBooksComponent implements OnInit {\r\n\r\n  private form: SearchForm;\r\n  books_list: any;\r\n  all_books: any;\r\n\r\n  constructor(\r\n    private nav: NavigationService,\r\n    private booksService: BooksService,\r\n    private simpleModalService: SimpleModalService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.nav.changeHeaderTitle('Borrowed Books');\r\n    this.form = new SearchForm(new SearchModel);\r\n\r\n    this.booksService.getBorrowedBooks().subscribe(\r\n      data => {\r\n        this.all_books = data;\r\n        this.books_list = this.all_books;\r\n        console.log(data)\r\n      }, error => {\r\n        console.log(error)\r\n      }\r\n    )\r\n\r\n\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: SearchModel, valid: boolean }) {\r\n    if(valid){\r\n      this.books_list = this.all_books.filter(x => x.book.title.toLowerCase().includes(value.search_text.toLowerCase()));\r\n    }else{\r\n      if (value.search_text === '') {\r\n        this.books_list = this.all_books;\r\n      }\r\n    }\r\n  }\r\n\r\n  returnBook(item){\r\n    // ADD SIMPLEMODAL SERVICE CONFIRMATION BEFORE CALL\r\n    this.booksService.returnBook({book_id: item.book.id}).subscribe(\r\n      data => {\r\n        item.book.status = 'available';\r\n        item.returned_date = Date.now();\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  filterClick(event, status){\r\n    event.preventDefault();\r\n    if (status === 'all') {\r\n      this.books_list = this.all_books;\r\n    } else if (status === 'digital copy') {\r\n      this.books_list = this.all_books.filter(x => x.book.is_digital_copy === true);\r\n    } else {\r\n      this.books_list = this.all_books.filter(x => x.book.status === status);\r\n    }\r\n\r\n    this.form.form.controls['search_text'].setValue(null);\r\n  }\r\n\r\n  // rowClicked(book) {\r\n  //   this.simpleModalService.addModal(BookDetailsComponent, {\r\n  //     has_error: false,\r\n  //     book:book\r\n  //   })\r\n  //   .subscribe((isConfirmed)=>{\r\n  //       //We get modal result\r\n  //       // if(isConfirmed) {\r\n  //       //     alert('accepted');\r\n  //       // }\r\n  //       // else {\r\n  //       //     alert('declined');\r\n  //       // }\r\n  //   });\r\n  // }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"dashboard--panel\\\">\\r\\n    <form class=\\\"form-group\\\" [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n        <div class=\\\"input-group mb-3\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"search_text\\\" class=\\\"form-control\\\" placeholder=\\\"Search Title\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon2\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary\\\" type=\\\"submit\\\"><i class=\\\"la la-search\\\"></i></button>\\r\\n            </div>\\r\\n            <div class=\\\"input-group-append\\\" ngbDropdown>\\r\\n                <button class=\\\"btn btn-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle><i class=\\\"la la-filter\\\"></i> Filter</button>\\r\\n                <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\" >\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\".\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'all')\\\">All</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'available')\\\">Available</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'checked out')\\\">Checked Out</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'digital copy')\\\">Digital Copy</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n    <div class=\\\"mt-4\\\">\\r\\n        <ul class=\\\"responsive-table pl-0\\\">\\r\\n          <li class=\\\"table-header\\\">\\r\\n            <div class=\\\"col col-1 font-weight-bold\\\">Book</div>\\r\\n            <div class=\\\"col col-2 font-weight-bold\\\">Location</div>\\r\\n            <div class=\\\"col col-3 font-weight-bold\\\">Status</div>\\r\\n            <div class=\\\"col col-4 font-weight-bold\\\">Owner</div>\\r\\n            <div class=\\\"col col-5 font-weight-bold\\\"></div>\\r\\n          </li>\\r\\n          <li class=\\\"table-row\\\" *ngFor=\\\"let book of books_list\\\" (click)=\\\"rowClicked(book)\\\">\\r\\n            <div class=\\\"col col-1\\\">\\r\\n                <p class=\\\"mb-0 font-weight-bold\\\">{{ book.title | titlecase }} </p>\\r\\n                <small class=\\\"text-muted\\\">by: {{ book.author | titlecase }}</small>\\r\\n            </div>\\r\\n            <div class=\\\"col col-2\\\"><p class=\\\"mb-0 mt-3\\\">{{ book.location | titlecase }}</p></div>\\r\\n            <div class=\\\"col col-3\\\">\\r\\n                <p class=\\\"badge badge-pill mb-0 mt-3\\\"  \\r\\n                    [ngClass]=\\\"{'badge-danger': book.status==='checked out', \\r\\n                    'badge-success': book.status==='available' }\\\" style=\\\"color: white;\\\">\\r\\n                    {{ book.status | titlecase  }}\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col col-4\\\">\\r\\n                <p class=\\\"mb-0 mt-3\\\">{{ book.owner.full_name | titlecase }}</p>\\r\\n            </div>\\r\\n            <div class=\\\"col col-5\\\">\\r\\n                <button type=\\\"button\\\" \\r\\n                class=\\\"btn btn-secondary btn-sm\\\"\\r\\n                (click)=\\\"updateBook(book)\\\">Update</button> \\r\\n            </div>\\r\\n          </li>\\r\\n          \\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SimpleModalService } from 'ngx-simple-modal';\r\nimport { BooksService } from 'src/app/commons/services/books/books.service';\r\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\r\nimport { BookDetailsComponent } from '../../partials/modals/book-details/book-details.component';\r\n\r\nimport { SearchForm } from 'src/app/commons/forms/search.forms';\r\nimport { SearchModel } from 'src/app/commons/models/search.model';\r\nimport { UpdateBookComponent } from '../../partials/modals/update-book/update-book.component';\r\nimport { ConfirmationMessageComponent } from '../../partials/modals/confirmation-message/confirmation-message.component';\r\n\r\n@Component({\r\n  selector: 'app-owned-books',\r\n  templateUrl: './owned-books.component.html',\r\n  styleUrls: ['./owned-books.component.css']\r\n})\r\nexport class OwnedBooksComponent implements OnInit {\r\n\r\n  books_list:any;\r\n  all_books:any;\r\n  private form: SearchForm;\r\n\r\n  constructor(\r\n    private nav: NavigationService,\r\n    private booksService: BooksService,\r\n    private simpleModalService: SimpleModalService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.nav.changeHeaderTitle('Owned Books');\r\n    this.form = new SearchForm(new SearchModel);\r\n\r\n    this.booksService.getOwnedBooks().subscribe(\r\n      data => {\r\n        this.all_books = data;\r\n        this.books_list = this.all_books;\r\n        console.log(data)\r\n      }, error => {\r\n        console.log(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  filterClick(event, status){\r\n    event.preventDefault();\r\n    if (status === 'all') {\r\n      this.books_list = this.all_books;\r\n    } else if (status === 'digital copy') {\r\n      this.books_list = this.all_books.filter(x => x.is_digital_copy === true);\r\n    } else {\r\n      this.books_list = this.all_books.filter(x => x.status === status);\r\n    }\r\n\r\n    this.form.form.controls['search_text'].setValue(null);\r\n  }\r\n\r\n  // rowClicked(book){\r\n  //   console.log(book)\r\n  //   this.simpleModalService.addModal(BookDetailsComponent, {\r\n  //     has_error: false,\r\n  //     book:book\r\n  //   })\r\n  //   .subscribe((isConfirmed)=>{\r\n  //       //We get modal result\r\n  //       // if(isConfirmed) {\r\n  //       //     alert('accepted');\r\n  //       // }\r\n  //       // else {\r\n  //       //     alert('declined');\r\n  //       // }\r\n  //   });\r\n  // }\r\n\r\n  onSubmit({ value, valid }: { value: SearchModel, valid: boolean }) {\r\n    if (valid) {\r\n      this.books_list = this.all_books.filter(x => x.title.toLowerCase().includes(value.search_text.toLowerCase()));\r\n    } else {\r\n      if (value.search_text === '') {\r\n        this.books_list = this.all_books;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateBook(book) {\r\n    this.simpleModalService.addModal(UpdateBookComponent, {book: book}).subscribe(\r\n      (bookData) => {\r\n        if (bookData) {\r\n          this.simpleModalService.addModal(ConfirmationMessageComponent, {has_error: false}).subscribe(\r\n            (isTrue) => {\r\n              if (isTrue) {\r\n                this.booksService.updateBook(bookData).subscribe(\r\n                  data => {\r\n                    const dt = Object(bookData);\r\n                    book.title = bookData.title;\r\n                    book.author = bookData.author;\r\n                    book.location = bookData.location;\r\n                    book.is_digital_copy = bookData.is_digital_copy;\r\n                  }, error => {\r\n                    console.log(error);\r\n                  }\r\n                );\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<footer class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n    <small>\\r\\n      <a href=\\\"\\\">© 2021. All Rights Reserved</a>\\r\\n    </small>\\r\\n    <div class=\\\"navbar\\\">\\r\\n      <a href=\\\"\\\">YouTube</a>\\r\\n      <a href=\\\"\\\">Twitter</a>\\r\\n      <a href=\\\"\\\">Instagram</a>\\r\\n      <a href=\\\"\\\">Blog</a>\\r\\n    </div>\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n  <div class=\\\"modal-content\\\" [ngClass]=\\\"{'toast-success': !this.has_error, \\r\\n  'toast-danger': this.has_error}\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h3 *ngIf=\\\"!this.has_error\\\" class=\\\"modal-title\\\" style=\\\"line-height: 0.9\\\">\\r\\n        <i class=\\\"la la-check-circle\\\"></i> Success\\r\\n      </h3>\\r\\n\\r\\n      <h3 *ngIf=\\\"this.has_error\\\" class=\\\"modal-title\\\" style=\\\"line-height: 0.9\\\">\\r\\n        <i class=\\\"la la-times-circle\\\"></i> Danger\\r\\n      </h3>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" >&times;</button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <p *ngIf=\\\"this.has_error\\\">Caught an error while processing your request, please try again.</p>\\r\\n      <p *ngIf=\\\"!this.has_error\\\">Succesfully added a new book you can check it on owned books.</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SimpleModalComponent } from \"ngx-simple-modal\";\r\n\r\nexport interface ConfirmModel {\r\n  has_error: boolean,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-add-book-messages',\r\n  templateUrl: './add-book-messages.component.html',\r\n  styleUrls: ['./add-book-messages.component.css']\r\n})\r\nexport class AddBookMessagesComponent extends SimpleModalComponent<ConfirmModel, boolean> implements OnInit {\r\n  has_error: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      this.close();\r\n    }, 2000);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h3 class=\\\"modal-title\\\" style=\\\"line-height: 0.9\\\">\\r\\n        <b>{{ book.title }}  \\r\\n\\r\\n          <span class=\\\"badge badge-pill badge-sm\\\" \\r\\n            [ngClass]=\\\"{'badge-danger': book.status==='checked out', \\r\\n            'badge-success': book.status==='available'}\\\" style=\\\"color: white; font-size: 12px;\\\"\\r\\n            *ngIf=\\\"book.is_digital_copy !== true\\\">\\r\\n            {{ book.status | titlecase  }}\\r\\n          </span>\\r\\n\\r\\n          <span class=\\\"badge badge-pill badge-sm badge-warning\\\" style=\\\"color: white; font-size: 12px;\\\"\\r\\n            *ngIf=\\\"book.is_digital_copy === true\\\">\\r\\n            Digital Copy\\r\\n          </span>\\r\\n        </b>\\r\\n        <br>\\r\\n        <small class=\\\"text-muted\\\">by {{book.author | titlecase }}</small>\\r\\n      </h3>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" >&times;</button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <p><b>Description:</b> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc non dictum libero. Vestibulum sit amet varius nunc. Sed luctus nisl sed auctor fermentum ...</p>\\r\\n      <p><b>Owned by:</b> {{ book.owner.full_name | titlecase }}</p>\\r\\n      <hr>\\r\\n      \\r\\n      <h6>Comments:</h6>\\r\\n      <div class=\\\"comment-section\\\" style=\\\"max-height: 200px; overflow: auto;\\\">\\r\\n        <div class=\\\"d-flex align-items-center pt-2 pb-3 border-bottom\\\" *ngFor=\\\"let comment of comments_list\\\" >\\r\\n          <img class=\\\"img-sm rounded-circle\\\" src=\\\"static/scripts/fe/src/assets/images/no-prof-img.png\\\" alt=\\\"profile\\\">\\r\\n          <div class=\\\"ml-3\\\" style=\\\"line-height: 0.5;\\\">\\r\\n            <h6 class=\\\"mb-0\\\">\\r\\n              <div class=\\\"row mb-0\\\">\\r\\n                <div class=\\\"col-sm-5\\\">\\r\\n                  {{ comment.user.full_name | titlecase }} \\r\\n                </div>\\r\\n                <div class=\\\"col-sm-5 text-muted pl-3 pr-0\\\" style=\\\"font-size: 10px; margin-top: 2px;\\\">\\r\\n                  {{ comment.date_created | date:'medium' }}\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-2\\\"><button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"deleteClick(comment.id)\\\" >&times;</button></div>\\r\\n              </div>\\r\\n            </h6>\\r\\n            <small class=\\\"text-muted mb-0\\\">{{ comment.message }}</small> <br>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <form class=\\\"form-group\\\" [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n      <input type=\\\"hidden\\\" formControlName=\\\"book_id\\\">\\r\\n      <input type=\\\"hidden\\\" formControlName=\\\"user\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <textarea class=\\\"form-control\\\"  formControlName=\\\"message\\\" placeholder=\\\"Write a comment...\\\"></textarea>\\r\\n        <div class=\\\"input-group-append\\\">\\r\\n          <button class=\\\"btn btn-secondary btn-sm\\\" type=\\\"submit\\\" [disabled]=\\\"this.disable\\\"><i class=\\\"la la-paper-plane\\\"></i></button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  \\r\\n    <div class=\\\"modal-footer\\\" [hidden]=\\\"book.owner.id===this.authService.user_id || book.is_digital_copy === true\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"borrowBook()\\\" [hidden]=\\\"book.status==='checked out'\\\">Check Out</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning btn-block\\\" (click)=\\\"returnBook()\\\" [hidden]='!this.isCheckedOut'>Return Book</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SimpleModalComponent, SimpleModalService } from \"ngx-simple-modal\";\r\nimport { CommentForm } from 'src/app/commons/forms/comment.forms';\r\nimport { CommentModel } from 'src/app/commons/models/comment';\r\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\r\nimport { BooksService } from 'src/app/commons/services/books/books.service';\r\n\r\nimport { ConfirmationMessageComponent } from '../../modals/confirmation-message/confirmation-message.component'\r\nexport interface ConfirmModel {\r\n  has_error: boolean,\r\n  book: any\r\n}\r\n\r\n@Component({\r\n  selector: 'app-book-details',\r\n  templateUrl: './book-details.component.html',\r\n  styleUrls: ['./book-details.component.css']\r\n})\r\nexport class BookDetailsComponent extends SimpleModalComponent<ConfirmModel, boolean> implements OnInit {\r\n\r\n  private form: CommentForm;\r\n  has_error = false;\r\n  book: any;\r\n  comments_list: any;\r\n  isCheckedOut = false;\r\n\r\n  constructor(\r\n    private booksService: BooksService,\r\n    private authService: AuthService,\r\n    private simpleModalService: SimpleModalService\r\n  ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.booksService.getAllComments(this.book.id).subscribe(\r\n      data => {\r\n        this.comments_list = data;\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    this.intializeForm();\r\n\r\n    this.booksService.isCheckedOut(this.book.id).subscribe(\r\n      data => {\r\n        this.isCheckedOut = Object(data).status;\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  confirm() {\r\n    // we set modal result as true on click on confirm button,\r\n    // then we can get modal result from caller code\r\n    this.result = true;\r\n    this.close();\r\n  }\r\n\r\n  borrowBook() {\r\n    this.simpleModalService.addModal(ConfirmationMessageComponent, {has_error: false}).subscribe(\r\n      (isTrue) => {\r\n        if (isTrue) {\r\n          this.booksService.checkoutBook({book_id: this.book.id}).subscribe(\r\n            data => {\r\n              this.book.status = 'checked out';\r\n              this.isCheckedOut = true;\r\n            }, error => {\r\n              console.log(error);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  returnBook() {\r\n    // ADD SIMPLEMODAL SERVICE CONFIRMATION BEFORE CALL\r\n    this.simpleModalService.addModal(ConfirmationMessageComponent, {has_error: false}).subscribe(\r\n      (isTrue) => {\r\n        if (isTrue) {\r\n          this.booksService.returnBook({book_id: this.book.id}).subscribe(\r\n            data => {\r\n              this.book.status = 'available';\r\n              this.isCheckedOut = false;\r\n            }, error => {\r\n              console.log(error);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  intializeForm() {\r\n    this.form = new CommentForm(new CommentModel);\r\n    this.form.form.controls['book_id'].setValue(this.book.id);\r\n    this.form.form.controls['user'].setValue(this.authService.user_id);\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: CommentModel, valid: boolean }) {\r\n    if (valid) {\r\n      this.booksService.addComment(value).subscribe(\r\n        data => {\r\n          this.comments_list.unshift(data);\r\n          this.intializeForm();\r\n        }, error => {\r\n          console.log(error);\r\n          this.intializeForm();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  deleteClick(comment_id) {\r\n    this.booksService.deleteComment({'comment_id': comment_id}).subscribe(\r\n      data => {\r\n        this.comments_list = this.comments_list.filter(x => x.id !== comment_id);\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-dialog modal-dialog-centered\\\">\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n      Action Confirmation\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      Are you sure?\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <button (click)=\\\"confirm()\\\">ACCEPT</button>\\n      <button (click)=\\\"cancel()\\\">DECLINE</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SimpleModalComponent } from \"ngx-simple-modal\";\n\nexport interface ConfirmModel {\n  has_error:boolean,\n}\n\n\n@Component({\n  selector: 'app-confirmation-message',\n  templateUrl: './confirmation-message.component.html',\n  styleUrls: ['./confirmation-message.component.css']\n})\nexport class ConfirmationMessageComponent extends SimpleModalComponent<ConfirmModel, boolean> implements OnInit {\n\n  constructor() {\n    super();\n   }\n\n  ngOnInit() {\n  }\n\n  confirm() {\n    this.result = true;\n    this.close();\n  }\n\n  cancel() {\n    this.result = false;\n    this.close();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-dialog modal-dialog-centered\\\">\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n      Update Book\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" >&times;</button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <div>\\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc non dictum libero. Vestibulum sit amet varius nunc. Sed luctus nisl sed auctor fermentum. Fusce porttitor, orci pharetra dictum laoreet, leo nulla malesuada odio, non dictum ante leo vel magna. Nullam sed dignissim quam. </p>\\n        <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\n            <div>\\n                <label>Title:</label>\\n                <input class=\\\"form-control\\\" formControlName=\\\"title\\\" type=\\\"text\\\">\\n                <!-- <span [hidden]=\\\"form.valid('title')\\\" class=\\\"text-danger\\\"><p><small>First name is required.</small></p></span> -->\\n            </div>\\n      \\n            <div>\\n                <label>Author:</label>\\n                <input class=\\\"form-control\\\" formControlName=\\\"author\\\" type=\\\"text\\\">\\n                <!-- <span [hidden]=\\\"form.valid('last_name')\\\" class=\\\"text-danger\\\"><p><small>Last name is required.</small></p></span> -->\\n            </div>\\n      \\n            <div>\\n              <label>Location:</label>\\n              <input class=\\\"form-control\\\" formControlName=\\\"location\\\" type=\\\"text\\\">\\n              <!-- <span [hidden]=\\\"form.valid('last_name')\\\" class=\\\"text-danger\\\"><p><small>Last name is required.</small></p></span> -->\\n            </div>\\n\\n            <div>\\n              <div>\\n                <input type=\\\"checkbox\\\" formControlName=\\\"is_digital_copy\\\">\\n                Is Digital Copy\\n              </div>\\n            </div>\\n      \\n            <br>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"this.disable\\\">Save</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SimpleModalComponent } from \"ngx-simple-modal\";\n\nimport { UpdateBookForm } from 'src/app/commons/forms/books.forms';\nimport { Books } from 'src/app/commons/models/book.model';\nimport { AddBookMessagesComponent } from '../add-book-messages/add-book-messages.component';\n\nexport interface ConfirmModel {\n  book: any\n}\n\n@Component({\n  selector: 'app-update-book',\n  templateUrl: './update-book.component.html',\n  styleUrls: ['./update-book.component.css']\n})\nexport class UpdateBookComponent extends SimpleModalComponent<ConfirmModel, any> implements OnInit {\n\n  private form: UpdateBookForm;\n  book: any;\n\n  constructor() {\n    super();\n   }\n\n  ngOnInit() {\n    this.intializeForm();\n  }\n\n  intializeForm(){\n    this.form = new UpdateBookForm(new Books);\n    this.form.defaultValue(this.book);\n    console.log(this.book);\n  }\n\n  onSubmit({ value, valid }: { value: Books, valid: boolean }) {\n    if (valid) {\n      this.result = value;\n      this.close();\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg main-nav\\\">\\n  <div>\\n    <ul class=\\\"navbar-nav \\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link nav-link-active\\\">{{ this.nav.headerTitle }}</a>\\n        </li>\\n      </ul>\\n  </div>\\n\\n  <div class=\\\"nav-right\\\">\\n    <div class=\\\"profile\\\">\\n      <div class=\\\"profile--avatar no-photo-{{ auth.user.color }}\\\">{{ auth.user.username }}</div>\\n    </div>\\n  </div>\\n\\n</nav>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\nimport { StateService } from '@uirouter/core';\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\nimport { User } from 'src/app/commons/models/user.model';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  private backtestLimit= 0;\n  private liveCount= 0;\n\n\n  constructor(\n    private state : StateService,\n    private nav: NavigationService,\n    private auth: AuthService,\n  ) { }\n\n  async ngOnInit() {\n\n    if(this.auth.user.id == null){\n      await this.auth.setuser();\n    }\n\n    this.auth.getUser();\n\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavigationComponent } from './navigation/navigation.component';\r\nimport { SideMenuComponent } from './side-menu/side-menu.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { BookDetailsComponent } from './modals/book-details/book-details.component';\r\nimport { AddBookMessagesComponent } from './modals/add-book-messages/add-book-messages.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ConfirmationMessageComponent } from './modals/confirmation-message/confirmation-message.component';\r\nimport { UpdateBookComponent } from './modals/update-book/update-book.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgbModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    NavigationComponent,\r\n    SideMenuComponent,\r\n    FooterComponent,\r\n    BookDetailsComponent,\r\n    AddBookMessagesComponent,\r\n    ConfirmationMessageComponent,\r\n    UpdateBookComponent],\r\n  entryComponents: [\r\n    BookDetailsComponent,\r\n    AddBookMessagesComponent,\r\n    ConfirmationMessageComponent,\r\n    UpdateBookComponent\r\n  ],\r\n})\r\nexport class PartialsModule { }\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"sidebar\\\">\\r\\n    <a href=\\\"\\\" class=\\\"nav-brand\\\">\\r\\n        E Library\\r\\n    </a>\\r\\n    <ul class=\\\"sidebar--links navbar-nav\\\">\\r\\n        <li class=\\\"sidebar--item \\\" [ngClass]=\\\"{active: state.includes('dashboard') }\\\">\\r\\n            <a (click)=\\\"onStateChange($event, 'dashboard', 'Dashboard')\\\"><i class=\\\"la la-home\\\"></i>Dashboard</a>\\r\\n        </li>\\r\\n        <li class=\\\"sidebar--item\\\" [ngClass]=\\\"{active: state.includes('add-book') }\\\">\\r\\n            <a (click)=\\\"onStateChange($event, 'add-book', 'Add Book')\\\"><i class=\\\"la la-plus-square\\\"></i>Add a Book</a>\\r\\n        </li>\\r\\n        <li class=\\\"sidebar--item\\\" [ngClass]=\\\"{active: state.includes('borrowed-books') }\\\">\\r\\n            <a (click)=\\\"onStateChange($event, 'borrowed-books', 'Borrowed Books')\\\"><i class=\\\"la la-copy\\\"></i>Borrowed Books</a>\\r\\n        </li>\\r\\n        <li class=\\\"sidebar--item\\\" [ngClass]=\\\"{active: state.includes('owned-books') }\\\">\\r\\n            <a (click)=\\\"onStateChange($event, 'owned-books', 'Owned Books')\\\"><i class=\\\"la la-book\\\"></i>Owned Books</a>\\r\\n        </li>\\r\\n        <li class=\\\"sidebar--item\\\" [ngClass]=\\\"{active: state.includes('settings') }\\\">\\r\\n          <a (click)=\\\"onStateChange($event, 'settings', 'Settings')\\\"><i class=\\\"la la-cogs\\\"></i>Settings</a>\\r\\n        </li>\\r\\n        <li class=\\\"sidebar--item\\\" [ngClass]=\\\"{active: state.includes('logout') }\\\">\\r\\n          <a (click)=\\\"onStateChange($event, 'logout', 'Logout')\\\"><i class=\\\"la la-sign-out-alt\\\"></i>Logout</a>\\r\\n        </li>\\r\\n    </ul>\\r\\n</nav>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/core';\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\n\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.css']\n})\nexport class SideMenuComponent implements OnInit {\n\n  constructor(\n    private state: StateService,\n    private nav: NavigationService,\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  onStateChange(event, state, header){\n    event.preventDefault();\n    this.state.go(state);\n    this.nav.changeHeaderTitle(header);\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"container p-5\\\">\\n\\n    <div>\\n      <div class=\\\"text-center mb-5\\\">\\n        <h4 class=\\\"section-title mb-3\\\">Forgot Password</h4>\\n        <div *ngIf=\\\"successForgotPassword\\\" class=\\\"alert alert-success\\\">\\n          <span>We have sent you an email with the reset password link. Please check your email.</span>\\n        </div>\\n         <p class=\\\"help-text w-75 m-auto\\\">Please enter your account's email address. We will send you a reset password link to your email address.</p>\\n      </div>\\n      <div class=\\\"form-container m-auto\\\">\\n          <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\n              <span [hidden]=\\\"!this.hasError\\\" class=\\\"text-danger\\\"><p>{{ form.err }}</p></span>\\n              <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input class=\\\"form-control\\\" formControlName=\\\"email\\\" (input)=\\\"inputChange($event.target.value)\\\" type=\\\"text\\\">\\n                <span [hidden]=\\\"!form.hasError('email', 'required')\\\" class=\\\"text-danger\\\"><p><small>This field is required.</small></p></span>\\n                <span [hidden]=\\\"!form.hasError('email', 'email')\\\" class=\\\"text-danger\\\"><p><small>Invalid email format.</small></p></span>\\n              </div>\\n\\n              <div class=\\\"form-group text-center\\\">\\n                <button [disabled]=\\\"this.sending\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Send Link</button>\\n              </div>\\n              <br/>\\n              <div class=\\\"form-group text-center\\\">\\n              <a (click)='redirectLogin()'>Back to Home</a>\\n            </div>\\n          </form>\\n      </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ForgotPasswordModel } from 'src/app/commons/models/forgot-password.model';\nimport { ForgotPasswordForm } from 'src/app/commons/forms/password.forms';\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\nimport { StateService } from '@uirouter/core';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  private form : ForgotPasswordForm;\n  successForgotPassword = false;\n  sending = false;\n  errors = {};\n\n  private hasError = false;\n\n  constructor(\n    private auth: AuthService,\n    private state: StateService\n  ) { }\n\n  ngOnInit() {\n    this.form = new ForgotPasswordForm(new ForgotPasswordModel);\n  }\n\n  onSubmit({ value, valid }: { value: ForgotPasswordModel, valid: boolean }) {\n    // send the form data to the backend if the value\n    // format are valid.\n    this.form.submitted = true;\n    this.form.err = \"\";\n    if (valid) {\n      this.sending = true;\n      this.auth.forgotPassword(value)\n        .then(resp => {\n          this.successForgotPassword = true;\n        })\n        .catch(err => {\n          console.log(err.error);\n          this.form.err = err.error.email;\n          this.hasError = true;\n          this.sending = false;\n        })\n      ;\n    }\n  }\n\n  inputChange(value) {\n    if(this.hasError === true) {\n      this.hasError = false;\n    }\n\n    if(this.sending === true){\n      this.sending = false;\n    }\n  }\n\n  redirectLogin(){\n    if (this.auth.authenticated())\n    {\n      this.state.go('logout')\n\n    }else{\n      this.state.go('login')\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container p-5\\\">\\n\\n    <h3 class=\\\"section-title mb-3\\\">Login</h3>\\n\\n    <div *ngIf=\\\"hasDeactivated\\\" class=\\\"alert alert-warning\\\">\\n        <p>Your account has been deactivated. Your personal data will be deleted within 48 hours.</p>\\n    </div>\\n    <div *ngIf=\\\"new\\\" class=\\\"alert alert-success\\\">\\n        <p>Successfully created your account</p>\\n    </div>\\n    <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\n        <span [hidden]=\\\"!form.err\\\" class=\\\"text-danger\\\">Invalid Email/Password. Please try again.</span>\\n        <!-- <span *ngIf=\\\"hasError\\\" class=\\\"text-danger\\\"><p>Invalid Email/Password. Please try again.</p></span> -->\\n        <div>\\n            <label>Email:</label>\\n            <input class=\\\"form-control\\\" formControlName=\\\"email\\\" (input)=\\\"inputChange($event.target.value)\\\" type=\\\"text\\\">\\n            <span *ngIf=\\\"form.hasError('email', 'required')\\\" class=\\\"text-danger\\\"><p><small>Email is required.</small></p></span>\\n            <span *ngIf=\\\"form.hasError('email', 'email')\\\" class=\\\"text-danger\\\"><p><small>Invalid email format.</small></p></span>\\n        </div>\\n        <div>\\n            <label>Password:</label>\\n            <input class=\\\"form-control\\\" formControlName=\\\"password\\\" (input)=\\\"inputChange($event.target.value)\\\" type=\\\"password\\\">\\n            <span *ngIf=\\\"form.hasError('password', 'required')\\\" class=\\\"text-danger\\\"><p><small>Password is required.</small></p></span>\\n        </div>\\n        <br>\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Login</button>\\n    </form><br>\\n    \\n\\n    <div class=\\\"form-group\\\">\\n        <p><a (click)='forgotPassword()' class=\\\"mb-1\\\">Forgot Password</a></p>\\n        <p><a (click)='register()'>Don't have an account?</a></p>\\n    </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\nimport { StateService } from '@uirouter/core';\nimport { LoginForm } from 'src/app/commons/forms/login.forms';\nimport { Login } from 'src/app/commons/models/login.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  private form : LoginForm;\n  private isActivated = false;\n  private hasError = false;\n  private hasDeactivated = false;\n  private new = false;\n\n  constructor(\n    private auth: AuthService,\n    private state: StateService,\n  ) { }\n\n  ngOnInit() {\n    // initialize the form.\n    this.form = new LoginForm(new Login);\n    this.isActivated = this.state.params['is_activated'];\n    if (this.auth.authenticated()) return this.state.go('dashboard');\n      console.log('Authenticated');\n\n    if(this.state.params.deactivate === 'true') {\n      this.hasDeactivated = true;\n\n      setTimeout(() => {\n        this.hasDeactivated = false;\n      }, 3000)\n    }\n\n    if(this.state.params.new === 'true') {\n      this.new = true;\n\n      setTimeout(() => {\n        this.new = false;\n      }, 3000)\n    }\n  }\n\n  inputChange(value) {\n    if(this.hasError === true) {\n      this.hasError = false;\n    }\n  }\n\n  onSubmit({ value, valid }: { value: Login, valid: boolean }) {\n    // send the form data to the backend if the value\n    // format are valid.\n    this.form.submitted = true;\n    if (valid) {\n      this.auth.login(value)\n        .then(resp => {\n          // redirect the user to the last page\n          // he/she tried to access before logging in\n          try {\n            // gets the first matched url\n            const prevState = this.state.get().filter(state => state.$$state().url.exec(this.state.params.next));\n            if (prevState.length !== 0) {\n              const redirectUrl = prevState.shift().name;\n              if (redirectUrl != 'login')\n              {\n                if(redirectUrl === 'forgot-password' || redirectUrl === 'reset-password' || redirectUrl === 'activate-account' )\n                {\n                  this.state.go('dashboard');\n                }else{\n                  this.state.go(redirectUrl);\n                }\n              }\n            } else {\n              this.state.go('dashboard');\n            }\n          } catch (error) {\n            this.state.go('login');\n          }\n        })\n        .catch(err => {\n          this.form.err = err;\n        });\n      }\n    }\n\n    forgotPassword(){\n      this.state.go('forgot-password')\n    }\n\n    register(){ \n      this.state.go('register')\n    }\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ],\r\n  declarations: [LoginComponent, RegisterComponent, ForgotPasswordComponent, ResetPasswordComponent,]\r\n})\r\nexport class PublicModule { }\r\n","import { ContentOnly } from \"src/app/commons/utils/layout.utils\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { Disconnect, Deactivate } from \"src/app/commons/utils/security.utils\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { ResetPasswordComponent } from \"./reset-password/reset-password.component\";\r\n\r\n\r\nexport const PUBLIC_STATES: Object[] = [\r\n    {\r\n        name: 'login',\r\n        url : '/login/',\r\n        views: ContentOnly(LoginComponent),\r\n        params: { next: window.location.pathname }\r\n    },\r\n    {\r\n        name    : 'register-login',\r\n        url     : '/login/:new',\r\n        views: ContentOnly(LoginComponent),\r\n        params: { next: window.location.pathname }\r\n    },\r\n    {\r\n        name    : 'logout',\r\n        url     : '/logout/',\r\n        onEnter : Disconnect\r\n    },\r\n    {\r\n        name    : 'log-out',\r\n        url     : '/logout/',\r\n        onEnter : Deactivate\r\n    },\r\n    {\r\n        name    : 'log-in',\r\n        url     : '/login/:deactivate',\r\n        views: ContentOnly(LoginComponent),\r\n        params: { next: window.location.pathname }\r\n    },\r\n    {\r\n        name    : 'register',\r\n        url     : '/register/',\r\n        views: ContentOnly(RegisterComponent),\r\n        params: { next: window.location.pathname }\r\n    },\r\n    {\r\n        name    : 'forgot-password',\r\n        url     : '/forgot-password/',\r\n        views: ContentOnly(ForgotPasswordComponent),\r\n    },\r\n    {\r\n        name    : 'reset-password',\r\n        url     : '/reset-password/:token',\r\n        views: ContentOnly(ResetPasswordComponent),\r\n    },\r\n]","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"container p-5\\\">\\n    <h3 class=\\\"section-title mb-3\\\">Register</h3>\\n\\n    <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\n        <div>\\n            <label>First Name:</label>\\n            <input class=\\\"form-control\\\" formControlName=\\\"first_name\\\" type=\\\"text\\\">\\n            <span [hidden]=\\\"form.valid('first_name')\\\" class=\\\"text-danger\\\"><p><small>First name is required.</small></p></span>\\n        </div>\\n\\n        <div>\\n            <label>Last Name:</label>\\n            <input class=\\\"form-control\\\" formControlName=\\\"last_name\\\" type=\\\"text\\\">\\n            <span [hidden]=\\\"form.valid('last_name')\\\" class=\\\"text-danger\\\"><p><small>Last name is required.</small></p></span>\\n        </div>\\n\\n        <div>\\n          <label>Username:</label>\\n          <br>\\n          <small>Please note that you cannot change your username after sign up.</small>\\n          <input class=\\\"form-control\\\" formControlName=\\\"username\\\" (input)=\\\"usernameInputChange($event.target.value)\\\" type=\\\"text\\\">\\n          <span [hidden]=\\\"form.valid('username')\\\" class=\\\"text-danger\\\"><p><small>Username is required.</small></p></span>\\n          <span *ngIf=\\\"this.hasUsernameError\\\" class=\\\"text-danger\\\"><p><small>{{ this.usernameErr }}</small></p></span>\\n          <!-- <span [hidden]=\\\"!form.err\\\" class=\\\"text-danger\\\"><p><small>{{ this.usernameErr }}</small></p></span> -->\\n        </div>\\n\\n        <div>\\n            <label>Email:</label>\\n            <input class=\\\"form-control\\\" formControlName=\\\"email\\\" (input)=\\\"emailInputChange($event.target.value)\\\" type=\\\"text\\\">\\n            <span *ngIf=\\\"form.hasError('email', 'required')\\\" class=\\\"text-danger\\\"><p><small>Email is required.</small></p></span>\\n            <span *ngIf=\\\"form.hasError('email', 'email')\\\" class=\\\"text-danger\\\"><p><small>Invalid email format.</small></p></span>\\n            <span *ngIf=\\\"this.hasEmailError\\\" class=\\\"text-danger\\\"><p><small>{{ this.emailErr }}</small></p></span>\\n        </div>\\n\\n        <div>\\n            <label>Password:</label>\\n            <input class=\\\"form-control\\\" formControlName=\\\"password\\\" (input)=\\\"passwordInputChange($event.target.value)\\\" type=\\\"password\\\">\\n            <span *ngIf=\\\"this.mismatchedPassword\\\" class=\\\"text-danger\\\"><p><small>{{ this.passwordErr }}</small></p></span>\\n            <span [hidden]=\\\"form.valid('password')\\\" class=\\\"text-danger\\\"><p><small>Password is required.</small></p></span>\\n        </div>\\n        <div>\\n            <label>Confirm Password:</label>\\n            <input class=\\\"form-control\\\" formControlName=\\\"confirm_password\\\" (input)=\\\"passwordInputChange($event.target.value)\\\" type=\\\"password\\\">\\n            <span *ngIf=\\\"this.mismatchedPassword\\\" class=\\\"text-danger\\\"><p><small>{{ this.passwordErr }}</small></p></span>\\n            <span [hidden]=\\\"form.valid('confirm_password')\\\" class=\\\"text-danger\\\"><p><small>Password is required.</small></p></span>\\n      </div>\\n        <br>\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"this.disable\\\">Register</button>\\n    </form>\\n\\n    <div class=\\\"form-group text-center mt-5\\\">\\n        <p><a (click)='redirectLogin()'>Back to Home</a></p>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RegisterForm } from 'src/app/commons/forms/register.forms';\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\nimport { StateService } from '@uirouter/core';\nimport { Register } from 'src/app/commons/models/register.model';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  private form: RegisterForm;\n  private usernameErr: string = \"\";\n  private emailErr:string = \"\";\n  private passwordErr:string = \"\";\n  private hasEmailError = false;\n  private hasUsernameError = false;\n  private mismatchedPassword = false;\n  private disable = false;\n\n  constructor(\n    private auth: AuthService,\n    private state: StateService\n  ) { }\n\n\n  ngOnInit() {\n    this.form = new RegisterForm(new Register);\n  }\n\n  usernameInputChange(value) {\n    if(this.hasUsernameError === true) {\n      return this.hasUsernameError = false;\n    }\n  }\n\n  emailInputChange(value) {\n    if(this.hasEmailError === true) {\n      return this.hasEmailError = false;\n    }\n  }\n\n  passwordInputChange(value) {\n    if(this.mismatchedPassword === true) {\n      return this.mismatchedPassword = false;\n    }\n  }\n\n  onSubmit({ value, valid }: { value: Register, valid: boolean }) {\n    // send the form data to the backend if the value\n    // format are valid.\n    this.form.submitted = true;\n    if (valid) {\n      this.disable = true;\n      this.auth.register(value)\n        .then(resp => {\n            //this.state.go('dashboard');\n            this.state.go('register-login',{'new': true});\n        })\n        .catch(err => {\n          this.form.err = err.error;\n          this.disable = false;\n          // this.usernameErr = err.error.username;\n          // this.emailErr = err.error.email;\n          if(err.error.email) {\n            this.emailErr = err.error.email;\n            this.hasEmailError = true;\n          }\n\n          if(err.error.username) {\n            this.usernameErr = err.error.username;\n            this.hasUsernameError = true;\n          }\n\n          if(err.error.non_field_errors) {\n            this.passwordErr = err.error.non_field_errors;\n            this.mismatchedPassword = true;\n          }\n        })\n      ;\n    }else{\n      this.disable = false;\n      this.form.err = \"\";\n    }\n  }\n\n  redirectLogin(){\n    if (this.auth.authenticated())\n    {\n      this.state.go('logout')\n\n    }else{\n      this.state.go('login')\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"container\\\">\\n    <div>\\n      <div class=\\\"text-center mb-5\\\">\\n        <h4 class=\\\"section-title mb-3\\\">Reset Password</h4>\\n        <div *ngIf=\\\"this.successResetPassword\\\" class=\\\"alert alert-success\\\">\\n          <span>You have successfully reset your password. Please try to <a (click)='redirectLogin()'>login</a>.</span>\\n        </div>\\n        <p class=\\\"help-text w-75 m-auto\\\">Enter the new password on the fields below.</p>\\n      </div>\\n      <div class=\\\"form-container m-auto\\\">\\n          <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\n            <span [hidden]=\\\"!hasError\\\" class=\\\"text-danger\\\"><p>{{ form.err }}</p></span>\\n            <div class=\\\"form-group\\\">\\n              <label>New Password</label>\\n              <input type=\\\"password\\\" formControlName=\\\"new_password\\\" (input)=\\\"inputChange($event.target.value)\\\" class=\\\"form-control\\\">\\n              <span [hidden]=\\\"!form.hasError('new_password', 'required')\\\" class=\\\"text-danger\\\"><p><small>This field is required.</small></p></span>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Confirm Password</label>\\n              <input type=\\\"password\\\" formControlName=\\\"confirm_new_password\\\" (input)=\\\"inputChange($event.target.value)\\\" class=\\\"form-control\\\">\\n              <span [hidden]=\\\"!form.hasError('confirm_new_password', 'required')\\\" class=\\\"text-danger\\\"><p><small>This field is required.</small></p></span>\\n            </div>\\n            <div class=\\\"form-group text-center\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary form-control\\\" [disabled]='this.disable'>Submit</button>\\n            </div>\\n            <br/>\\n          </form>\\n          <a (click)='redirectLogin()'>Back to Home</a>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/core';\nimport { ResetPasswordForm } from 'src/app/commons/forms/password.forms';\nimport { ResetPasswordModel } from 'src/app/commons/models/reset-password.model';\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  private form : ResetPasswordForm;\n  private token : string;\n  private hasError = false;\n  private disable = false;\n\n  errors = {};\n  successResetPassword = false;\n\n  constructor(\n    private auth: AuthService,\n    private state: StateService,\n  ) { }\n\n  ngOnInit() {\n    this.form = new ResetPasswordForm(new ResetPasswordModel);\n    this.token = this.state.params['token'];\n  }\n\n  onSubmit({ value, valid }: { value: ResetPasswordModel, valid: boolean }) {\n    // send the form data to the backend if the value\n    // format are valid.\n    this.form.submitted = true;\n    this.form.err = \"\";\n    value.token = this.token;\n    if (valid) {\n      this.disable = true;\n      this.auth.resetPassword(value)\n        .then(resp => {\n          this.successResetPassword = true;\n        })\n        .catch(err => {\n          this.form.err = err.error.non_field_errors;\n          this.hasError = true;\n          this.disable = false;\n        })\n      ;\n    }\n  }\n\n  inputChange(value) {\n    if(this.hasError === true) {\n      this.hasError = false;\n    }\n\n    if(this.disable === true){\n      this.disable = false;\n    }\n  }\n\n  redirectLogin(){\n    if (this.auth.authenticated())\n    {\n      this.state.go('logout')\n\n    }else{\n      this.state.go('login')\n    }\n  }\n\n}\n","module.exports = \"/* .table{\\r\\n    margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.dashboard--panel{\\r\\n    height: 100%;\\r\\n} */\\r\\n\\r\\n.text-block {\\r\\n    position: absolute;\\r\\n    bottom: 90px;\\r\\n    right: 30px;\\r\\n}\"","module.exports = \"<div class=\\\"dashboard--panel\\\">\\r\\n    <form class=\\\"form-group\\\" [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n        <div class=\\\"input-group mb-3\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"search_text\\\" class=\\\"form-control\\\" placeholder=\\\"Search Title\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon2\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary\\\" type=\\\"submit\\\"><i class=\\\"la la-search\\\"></i></button>\\r\\n            </div>\\r\\n            <div class=\\\"input-group-append\\\" ngbDropdown>\\r\\n                <button class=\\\"btn btn-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle><i class=\\\"la la-filter\\\"></i> Filter</button>\\r\\n                <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\" >\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\".\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'all')\\\">All</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'available')\\\">Available</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'checked out')\\\">Checked Out</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'digital copy')\\\">Digital Copy</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n    <div class=\\\"mt-5\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-3\\\" *ngFor=\\\"let book of books_list\\\" (click)=\\\"rowClicked(book)\\\">\\r\\n                <div class=\\\"card mb-5\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <img src=\\\"static/scripts/fe/src/assets/images/no-cover-img.jpg\\\" class=\\\"card-img-top mb-3\\\" alt=\\\"...\\\">\\r\\n\\r\\n                        <span class=\\\"badge badge-pill badge-sm text-block\\\" \\r\\n                            [ngClass]=\\\"{'badge-danger': book.status==='checked out', \\r\\n                            'badge-success': book.status==='available'}\\\" style=\\\"color: white; font-size: 12px;\\\"\\r\\n                            *ngIf=\\\"book.is_digital_copy !== true\\\">\\r\\n                            {{ book.status | titlecase  }}\\r\\n                        </span>\\r\\n\\r\\n                        <span class=\\\"badge badge-pill badge-sm badge-warning text-block\\\" style=\\\"color: white; font-size: 12px;\\\"\\r\\n                            *ngIf=\\\"book.is_digital_copy === true\\\">\\r\\n                            Digital Copy\\r\\n                        </span>\\r\\n\\r\\n\\r\\n                        \\r\\n                        <h5 class=\\\"card-title mb-0\\\">\\r\\n                            {{ book.title | titlecase }}\\r\\n                        </h5>\\r\\n                        <small class=\\\"text-muted mt-0\\\">by: {{ book.author | titlecase }} </small>\\r\\n\\r\\n                        \\r\\n                        <!-- <p class=\\\"card-text\\\">\\r\\n                            <b>Book Description: </b>Lorem ipsum dolor sit amet, consectetur adipiscing elit. <br>\\r\\n                            <b>Location: </b>{{ book.location | titlecase }}\\r\\n                        </p>\\r\\n        \\r\\n                        <p class=\\\"card-text\\\"><small class=\\\"text-muted\\\">Property of: {{ book.owner.full_name | titlecase }}</small></p> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { StateService } from '@uirouter/core';\r\n// import { DatePipe } from '@angular/common';\r\nimport { TitleCasePipe } from '@angular/common';\r\n\r\nimport { SearchForm } from 'src/app/commons/forms/search.forms';\r\nimport { SearchModel } from 'src/app/commons/models/search.model';\r\n\r\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\r\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\r\nimport { UserService } from 'src/app/commons/services/auth/user.service';\r\nimport { BooksService } from 'src/app/commons/services/books/books.service';\r\nimport { SimpleModalService } from \"ngx-simple-modal\";\r\n\r\nimport { BookDetailsComponent } from '../../partials/modals/book-details/book-details.component'\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  // private pipe = new DatePipe('en-US');\r\n\r\n  books_list: any;\r\n  all_books: any;\r\n  private form: SearchForm;\r\n\r\n  constructor(\r\n    private nav: NavigationService,\r\n    private auth: AuthService,\r\n    private state: StateService,\r\n    private booksService: BooksService,\r\n    private simpleModalService: SimpleModalService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n\r\n    this.nav.changeHeaderTitle('Dashboard');\r\n    this.form = new SearchForm(new SearchModel);\r\n\r\n    setTimeout(() => {\r\n      this.nav.hasLoaded = false;\r\n    }, 100);\r\n\r\n    this.auth.getUser();\r\n\r\n    if (this.auth.user.id == null) {\r\n      // get user information from the backend. (sync)\r\n      await this.auth.setuser();\r\n    }\r\n\r\n    this.booksService.getAllBooks().subscribe(\r\n      data => {\r\n        this.all_books = data;\r\n        this.books_list = this.all_books;\r\n        console.log(data);\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: SearchModel, valid: boolean }) {\r\n    if (valid) {\r\n      this.books_list = this.all_books.filter(x => x.title.toLowerCase().includes(value.search_text.toLowerCase()));\r\n    } else {\r\n      if (value.search_text === '') {\r\n        this.books_list = this.all_books;\r\n      }\r\n    }\r\n  }\r\n\r\n  rowClicked(book) {\r\n    console.log(book);\r\n    this.simpleModalService.addModal(BookDetailsComponent, {\r\n      has_error: false,\r\n      book: book\r\n    })\r\n    .subscribe((isConfirmed) => {\r\n        //We get modal result\r\n        // if(isConfirmed) {\r\n        //     alert('accepted');\r\n        // }\r\n        // else {\r\n        //     alert('declined');\r\n        // }\r\n    });\r\n  }\r\n\r\n  filterClick(event, status) {\r\n    event.preventDefault();\r\n    if (status === 'all') {\r\n      this.books_list = this.all_books;\r\n    } else if (status === 'digital copy') {\r\n      this.books_list = this.all_books.filter(x => x.is_digital_copy === true);\r\n    } else {\r\n      this.books_list = this.all_books.filter(x => x.status === status);\r\n    }\r\n\r\n    this.form.form.controls['search_text'].setValue(null);\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"dashboard--panel\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n          <div class=\\\"panel--white\\\">\\n              <div class=\\\"panel__header\\\">\\n                <div class=\\\"panel-label\\\"><i class=\\\"fa fa-newspaper-o m-1\\\"></i>Profile</div>\\n              </div>\\n              <div class=\\\"panel__content\\\">\\n                  <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\" class=\\\"form\\\" enctype=\\\"multipart/form-data\\\">\\n                    <div [hidden]=\\\"!this.editSuccessMessage\\\" class=\\\"alert alert-success\\\"><p>You have successfully updated your info!</p></div>\\n                    <div *ngIf=\\\"!this.ProfNoChanges\\\" class=\\\"alert alert-info\\\"><p>No Changes!</p></div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col mb-5\\\">\\n                            <label>First Name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"first_name\\\"  placeholder=\\\"First name\\\">\\n                            <span [hidden]=\\\"form.valid('first_name')\\\" class=\\\"text-danger\\\"><p><small>This field is required.</small></p></span>\\n                            <label>Username</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" (input)=\\\"usernameInputChange($event.target.value)\\\" placeholder=\\\"Username\\\" disabled>\\n                            <small class='text-muted'>Please note that you cannot change your username after sign up.</small><br><br>\\n\\n                            <div [ngSwitch]=\\\"switchExpression\\\" class=\\\"password-field\\\">\\n                                <!-- CHANGE PASSWORD FORM -->\\n                                <div *ngSwitchCase=\\\"'change_password'\\\">\\n                                    <form [formGroup]=\\\"edit_password_form.form\\\" (ngSubmit)=\\\"onEditPasswordSubmit(edit_password_form.form)\\\">\\n                                        <p>Change Password</p>\\n                                        <span *ngIf=\\\"passwordHasError\\\" class=\\\"text-danger\\\">{{ edit_password_form.err }}</span>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>Old Password</label>\\n                                            <input type=\\\"password\\\" formControlName=\\\"old_password\\\" (input)=\\\"passwordInputChange($event.target.value)\\\" class=\\\"form-control\\\">\\n                                            <span *ngIf=\\\"edit_password_form.hasError('old_password', 'required')\\\" class=\\\"text-danger\\\"><small>This field is required</small></span>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>New Password</label>\\n                                            <input type=\\\"password\\\" formControlName=\\\"new_password\\\" (input)=\\\"passwordInputChange($event.target.value)\\\" class=\\\"form-control\\\">\\n                                            <span *ngIf=\\\"edit_password_form.hasError('new_password', 'required')\\\" class=\\\"text-danger\\\"><p><small>This field is required</small></p></span>\\n                                            <span *ngIf=\\\"edit_password_form.hasError('new_password', 'minlength')\\\" class=\\\"text-danger\\\"><p><small>Password should consist of 8 characters</small></p></span>\\n                                            <span *ngIf=\\\"edit_password_form.hasError('new_password', 'pattern')\\\" class=\\\"text-danger\\\"><p><small>Password must contain a number and symbol (#$@!%&*?_)</small></p></span>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>Confirm Password</label>\\n                                            <input type=\\\"password\\\" formControlName=\\\"confirm_new_password\\\" (input)=\\\"passwordInputChange($event.target.value)\\\" class=\\\"form-control\\\">\\n                                            <span *ngIf=\\\"edit_password_form.hasError('confirm_new_password', 'required')\\\" class=\\\"text-danger\\\"><p><small>This field is required</small></p></span>\\n                                            <span *ngIf=\\\"edit_password_form.hasError('confirm_new_password', 'minlength')\\\" class=\\\"text-danger\\\"><p><small>Password should consist of 8 characters.</small></p></span>\\n                                            <span *ngIf=\\\"edit_password_form.hasError('confirm_new_password', 'pattern')\\\" class=\\\"text-danger\\\"><p><small>Password must contain a number and symbol (#$@!%&*?_)</small></p></span>\\n                                        </div>\\n                                        <div class=\\\"d-flex justify-content-between\\\">\\n                                            <button (click)=\\\"cancelPasswordEvent()\\\" class=\\\"btn-sm btn-light\\\">Cancel</button>\\n                                            <button class=\\\"btn-sm btn-primary\\\" [disabled]=\\\"this.passbtn_disable\\\">Update Password</button>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                                <!-- CHANGE/CREATE PASSWORD -- SUCCESS -->\\n                                <div *ngSwitchCase=\\\"'success'\\\">\\n                                  <p>Congratulations! You’ve successfully updated your password.</p>\\n                                  <div class=\\\"text-right\\\">\\n                                      <a href=\\\"\\\" (click)=\\\"changePassClick($event)\\\" class=\\\"text-right bold changePw\\\">Change Password</a>\\n                                  </div>\\n                                </div>\\n\\n                                <div *ngSwitchDefault>\\n                                    <!-- PASSWORD ALREADY CREATED -->\\n                                    <div class=\\\"text-left\\\">\\n                                        <a href=\\\"\\\" (click)=\\\"changePassClick($event)\\\" class=\\\"bold changePw\\\">Change Password</a>\\n                                    </div>\\n                                    <!-- CPASSWORD ALREADY CREATED-->\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            <label>Last Name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"last_name\\\" placeholder=\\\"Last name\\\">\\n                            <span [hidden]=\\\"form.valid('last_name')\\\" class=\\\"text-danger\\\"><p><small>This field is required.</small></p></span>\\n\\n                            <label>E-mail</label>\\n\\n                            <div [ngSwitch]=\\\"switchExpression\\\" class=\\\"email-field\\\">\\n                                <div *ngSwitchDefault>\\n                                  <div>\\n                                    <div class=\\\"bold mt-2\\\"><p>{{ form.form.value.email }} <a href=\\\"\\\" (click)=\\\"changeEmailClick($event)\\\" class=\\\"text-right bold text-muted\\\"><small>Change Email</small></a></p></div>\\n                                  </div>\\n                                </div>\\n\\n\\n                                <div *ngSwitchCase=\\\"'change_email'\\\">\\n                                  <div class=\\\"bold mt-2\\\"><p>{{ form.form.value.email }}</p></div>\\n\\n                                  <form [formGroup]=\\\"edit_email_form.form\\\" (ngSubmit)=\\\"onEditEmailSubmit(edit_email_form.form)\\\">\\n                                    <p>Change Email</p>\\n                                    <span *ngIf=\\\"this.emailHasError\\\" class=\\\"text-danger\\\"><p>This email is already used.</p></span>\\n                                    <span *ngIf=\\\"this.emailNoChanges\\\" class=\\\"text-danger\\\"><p>Nothing Changed</p></span>\\n\\n                                    <div class=\\\"form-group\\\">\\n                                      <label>New Email</label>\\n                                      <input class=\\\"form-control\\\" formControlName=\\\"email\\\" (input)=\\\"emailInputChange($event.target.value)\\\" type=\\\"text\\\">\\n                                      <span *ngIf=\\\"edit_email_form.form.hasError('email', 'required')\\\" class=\\\"text-danger\\\"><p><small>This field is required.</small></p></span>\\n                                      <span *ngIf=\\\"edit_email_form.form.hasError('email', 'email')\\\" class=\\\"text-danger\\\"><p><small>Invalid email format.</small></p></span>\\n                                      <span *ngIf=\\\"edit_email_form.form.hasEmailError\\\" class=\\\"text-danger\\\"><p><small>{{ this.emailErr }}</small></p></span>\\n                                    </div>\\n\\n                                    <div class=\\\"d-flex justify-content-between\\\">\\n                                      <button (click)=\\\"cancelEmailEvent()\\\" class=\\\"btn-sm btn-light\\\">Cancel</button>\\n                                      <button class=\\\"btn-sm btn-primary\\\" [disabled]=\\\"this.emailbtn_disabled\\\">Update Email</button>\\n                                    </div>\\n                                  </form>\\n                                </div>\\n\\n                                <!-- CHANGE EMAIL -- SUCCESS -->\\n                                <div *ngSwitchCase=\\\"'edit_email_success'\\\">\\n                                  <p>Congratulations! You’ve successfully updated your email.</p>\\n                                  <div class=\\\"text-right\\\">\\n                                    <a href=\\\"\\\" (click)=\\\"changeEmailClick($event)\\\" class=\\\"text-right bold changePw\\\">Change Email</a>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                        </div>\\n                    </div>\\n\\n                    <button class=\\\"btn-custom-lg btn-primary\\\">Update Profile</button>\\n                    <button class=\\\"btn-custom-lg btn-light\\\">Cancel</button>\\n\\n                </form>\\n              </div>\\n\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\r\nimport { UserForm } from 'src/app/commons/forms/user.forms';\r\nimport { EditPasswordForm, AddPasswordForm } from 'src/app/commons/forms/password.forms';\r\nimport { EditEmailForm } from 'src/app/commons/forms/email.forms';\r\nimport { User } from 'src/app/commons/models/user.model';\r\nimport { EditPasswordModel } from 'src/app/commons/models/edit-password.model';\r\nimport { AddPasswordModel } from 'src/app/commons/models/add-password.model';\r\nimport { EditEmailModel } from 'src/app/commons/models/edit-email.model';\r\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\r\nimport { StateService } from '@uirouter/core';\r\nimport { UserService } from 'src/app/commons/services/auth/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  /* Form Intialization */\r\n  private form : UserForm;\r\n  private edit_password_form: EditPasswordForm;\r\n  private edit_email_form: EditEmailForm;\r\n  //private add_password_form: AddPasswordForm;\r\n  private file: File | null = null;\r\n  private date: Date = new Date;\r\n\r\n  private checkPass : boolean;\r\n  private switchExpression: string;\r\n  private switchExpression1: string;\r\n  private errorString:string;\r\n  private changePic : boolean;\r\n  private token: string;\r\n\r\n  private checkDeact : boolean = true;\r\n  private editSuccessMessage = false;\r\n  private usernameHasError = false;\r\n  private passwordHasError = false;\r\n  private deactPassHasErr = false;\r\n  private emailNoChanges = false;\r\n  private emailHasError = false;\r\n\r\n  private passbtn_disable = false;\r\n  private deacbtn_disable = false;\r\n  private emailbtn_disabled = false;\r\n  private ProfNoChanges:boolean = true;\r\n\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private state: StateService,\r\n    private user: UserService,\r\n    private nav: NavigationService,\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    // initialize the form.\r\n    this.switchExpression = null;\r\n    this.form = new UserForm(new User);\r\n    this.edit_password_form = new EditPasswordForm(new EditPasswordModel);\r\n    this.edit_email_form = new EditEmailForm(new EditEmailModel);\r\n    //this.add_password_form = new AddPasswordForm(new AddPasswordModel);\r\n\r\n    setTimeout(() => {\r\n      this.nav.hasLoaded = false\r\n    }, 100)\r\n\r\n    if (this.auth.user.id == null) {\r\n      // get user information from the backend. (sync)\r\n      await this.auth.setuser();\r\n    }\r\n\r\n\r\n    this.auth.getUser();\r\n    this.token = this.auth.getToken().token;\r\n\r\n    this.nav.changeHeaderTitle('Settings');\r\n\r\n    this.form.defaultValue(this.auth.user);\r\n    this.checkPass = this.auth.user.has_usable_pass;\r\n\r\n  }\r\n\r\n  emailInputChange(value) {\r\n    if(this.emailHasError === true) {\r\n      return this.emailHasError = false;\r\n    }\r\n\r\n    if(this.emailNoChanges === true) {\r\n      return this.emailNoChanges = false;\r\n    }\r\n  }\r\n\r\n  passwordInputChange(value) {\r\n    if(this.passwordHasError === true) {\r\n      this.passwordHasError = false;\r\n    }\r\n  }\r\n\r\n  usernameInputChange(value) {\r\n    if(this.usernameHasError === true) {\r\n      this.usernameHasError = false;\r\n    }\r\n  }\r\n\r\n  @HostListener('change', ['$event.target.files']) emitFiles( event: FileList ) {\r\n    const file = event && event.item(0);\r\n    this.file = file;\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: User, valid: boolean }) {\r\n    // initiate submission of form.\r\n    this.form.submitted = true;\r\n    // send the form data to the backend if the value\r\n    // format are valid.\r\n    if (valid ) {\r\n      if(this.form.form.dirty)\r\n      {\r\n        this.user.update(value)\r\n        .then(resp => {\r\n          this.form.err = \"\";\r\n          this.state.go('user-settings');\r\n          this.editSuccessMessage = true;\r\n          this.ProfNoChanges = true;\r\n\r\n          setTimeout(() => {\r\n            this.editSuccessMessage  = false;\r\n          }, 3000)\r\n        })\r\n        .catch(err => {\r\n          this.form.err = err.error.username;\r\n          if(err.error.username) {\r\n            this.usernameHasError = true;\r\n          }\r\n        });\r\n      }else{\r\n        this.ProfNoChanges = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  onEditPasswordSubmit({value, valid}: {value: EditPasswordModel, valid:boolean}){\r\n    // initiate submission of form.\r\n    this.edit_password_form.submitted = true;\r\n    // send the form data to the backend if the value\r\n    // format are valid.\r\n    if(valid){\r\n      this.passbtn_disable = true;\r\n      this.user.updatePassword(value)\r\n        // initialize switchExpression to redirect to success view\r\n        // re initialize edit password form to empty fields\r\n        .then(resp => { this.switchExpression = 'success'; this.edit_password_form = new EditPasswordForm(new EditPasswordModel); })\r\n        .catch(err => {\r\n          if(err.error.new_password)\r\n          {\r\n            this.edit_password_form.err = \"This password is entirely numeric or too common.\"\r\n          }else if(err.error.non_field_errors){\r\n            this.edit_password_form.err = err.error.non_field_errors;\r\n          }else{\r\n            this.edit_password_form.err = \"Invalid Input. Please re-type New and Confirm Password.\";\r\n          }\r\n          if(err) {\r\n            this.passwordHasError = true;\r\n            this.passbtn_disable = false;\r\n          }\r\n        });\r\n    }else{\r\n      this.passbtn_disable = false;\r\n    }\r\n\r\n  }\r\n\r\n  onEditEmailSubmit({value, valid}: {value: EditEmailForm, valid:boolean}){\r\n    // initiate submission of form.\r\n    this.edit_email_form.submitted = true;\r\n    // send the form data to the backend if the value\r\n    // format are valid.\r\n    if(value['email'] === this.auth.user.email)\r\n    {\r\n      this.emailNoChanges = true;\r\n    }else{\r\n      this.emailNoChanges = false;\r\n      if(valid){\r\n        this.emailbtn_disabled = true;\r\n        this.user.updateEmail(value)\r\n          // initialize switchExpression to redirect to success view\r\n          // re initialize edit password form to empty fields\r\n          .then(resp => {\r\n            this.switchExpression = 'edit_email_success';\r\n            this.edit_email_form = new EditEmailForm(new EditPasswordModel);\r\n            this.form.form.value.email = value['email'];\r\n            this.auth.user.email = this.form.form.value.email;\r\n          })\r\n          .catch(err => {\r\n            this.edit_email_form.err = err.error.email;\r\n            if(this.edit_email_form.err)\r\n            {\r\n              this.emailHasError = true;\r\n              this.emailbtn_disabled = false;\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  // onAddPasswordSubmit({value, valid}: {value: AddPasswordModel, valid:boolean}){\r\n  //   // initiate submission of form.\r\n  //   this.add_password_form.submitted = true;\r\n  //   // send the form data to the backend if the value\r\n  //   // format are valid.\r\n  //   if(valid){\r\n  //     this.user.addPassword(value)\r\n  //       // initialize switchExpression to redirect to success view\r\n  //       // re initialize edit password form to empty fields\r\n  //       .then(resp => { this.switchExpression = 'success'; this.add_password_form = new AddPasswordForm(new AddPasswordModel); this.checkPass = true; })\r\n  //       .catch(err => { this.add_password_form.err = err.error.non_field_errors; });\r\n  //   }\r\n  // }\r\n\r\n  changeProfilePic($event){\r\n    $event.preventDefault();\r\n    this.changePic = !this.changePic;\r\n  }\r\n\r\n  changePassClick($event){\r\n    // prevent href default behavior\r\n\r\n    $event.preventDefault();\r\n    // initialize switchExpression to redirect to change password form\r\n    this.switchExpression = 'change_password';\r\n\r\n    if(this.passbtn_disable === true) {\r\n      this.passbtn_disable = false;\r\n    }\r\n  }\r\n\r\n  changeEmailClick($event){\r\n    // prevent href default behavior\r\n    \r\n    $event.preventDefault();\r\n    // initialize switchExpression to redirect to change password form\r\n    this.switchExpression = 'change_email';\r\n\r\n    if(this.emailbtn_disabled === true) {\r\n      this.emailbtn_disabled = false;\r\n    }\r\n  }\r\n\r\n  cancelEmailEvent(){\r\n    // re initialize edit email and add email form to empty fields\r\n    this.edit_email_form = new EditEmailForm(new EditEmailModel);\r\n\r\n    // initialize switchExpression to redirect to default view\r\n    this.switchExpression = '';\r\n  }\r\n\r\n  cancelPasswordEvent(){\r\n    // re initialize edit password and add password form to empty fields\r\n    this.edit_password_form = new EditPasswordForm(new EditPasswordModel);\r\n    //this.add_password_form = new AddPasswordForm(new AddPasswordModel);\r\n    // initialize switchExpression to redirect to default view\r\n    this.switchExpression = '';\r\n  }\r\n\r\n  deacPassInputChange(value) {\r\n    if(this.deactPassHasErr === true) {\r\n      this.deactPassHasErr = false;\r\n    }\r\n  }\r\n\r\n\r\n  createPassClick(){\r\n    // initialize switchExpression to redirect to create password form\r\n    this.switchExpression = 'create_password';\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SettingsComponent } from './settings/settings.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [SettingsComponent, DashboardComponent]\n})\nexport class UsersModule { }\n","import { NavContent } from \"src/app/commons/utils/layout.utils\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { LoginRequired } from \"src/app/commons/utils/security.utils\";\nimport { SettingsComponent } from \"./settings/settings.component\";\n\n\nexport const USER_STATES : Object[] = [\n    {\n        name : 'dashboard',\n        url  : '/dashboard/',\n        views:  NavContent(DashboardComponent),\n        onEnter: LoginRequired\n    },\n    {\n        name : 'dashboard-activated',\n        url  : '/dashboard/:activated',\n        views:  NavContent(DashboardComponent),\n        onEnter: LoginRequired\n    },\n    {\n        name : 'settings',\n        url  : '/settings/',\n        views:  NavContent(SettingsComponent),\n        onEnter: LoginRequired\n    },\n\n]","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  pusher: {\n    key: 'df021952df2cbae64372',\n    cluster: 'ap1',\n  },\n  stripe: {\n    key:'pk_test_yHHb0DcZ0ZkP1oLLAJxfWqyI00HH3wLgTf'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}
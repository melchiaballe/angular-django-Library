{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/commons/constants/api.constants.ts","webpack:///./src/app/commons/constants/conf.constants.ts","webpack:///./src/app/commons/forms/books.forms.ts","webpack:///./src/app/commons/forms/comment.forms.ts","webpack:///./src/app/commons/forms/email.forms.ts","webpack:///./src/app/commons/forms/login.forms.ts","webpack:///./src/app/commons/forms/register.forms.ts","webpack:///./src/app/commons/forms/search.forms.ts","webpack:///./src/app/commons/forms/user.forms.ts","webpack:///./src/app/commons/models/book.model.ts","webpack:///./src/app/commons/models/comment.ts","webpack:///./src/app/commons/models/edit-email.model.ts","webpack:///./src/app/commons/models/edit-password.model.ts","webpack:///./src/app/commons/models/login.model.ts","webpack:///./src/app/commons/models/register.model.ts","webpack:///./src/app/commons/models/search.model.ts","webpack:///./src/app/commons/models/user.model.ts","webpack:///./src/app/commons/services/auth/auth.service.ts","webpack:///./src/app/commons/services/auth/user.service.ts","webpack:///./src/app/commons/services/books/books.service.ts","webpack:///./src/app/commons/services/interceptors/token.service.ts","webpack:///./src/app/commons/services/navigation/navigation.service.ts","webpack:///./src/app/commons/utils/app.states.ts","webpack:///./src/app/commons/utils/http.utils.ts","webpack:///./src/app/commons/utils/layout.utils.ts","webpack:///./src/app/commons/utils/security.utils.ts","webpack:///./src/app/components/books/add-book/add-book.component.css","webpack:///./src/app/components/books/add-book/add-book.component.html","webpack:///./src/app/components/books/add-book/add-book.component.ts","webpack:///./src/app/components/books/books.module.ts","webpack:///./src/app/components/books/books.states.ts","webpack:///./src/app/components/books/borrowed-books/borrowed-books.component.css","webpack:///./src/app/components/books/borrowed-books/borrowed-books.component.html","webpack:///./src/app/components/books/borrowed-books/borrowed-books.component.ts","webpack:///./src/app/components/books/owned-books/owned-books.component.css","webpack:///./src/app/components/books/owned-books/owned-books.component.html","webpack:///./src/app/components/books/owned-books/owned-books.component.ts","webpack:///./src/app/components/partials/footer/footer.component.css","webpack:///./src/app/components/partials/footer/footer.component.html","webpack:///./src/app/components/partials/footer/footer.component.ts","webpack:///./src/app/components/partials/modals/add-book-messages/add-book-messages.component.css","webpack:///./src/app/components/partials/modals/add-book-messages/add-book-messages.component.html","webpack:///./src/app/components/partials/modals/add-book-messages/add-book-messages.component.ts","webpack:///./src/app/components/partials/modals/book-details/book-details.component.css","webpack:///./src/app/components/partials/modals/book-details/book-details.component.html","webpack:///./src/app/components/partials/modals/book-details/book-details.component.ts","webpack:///./src/app/components/partials/modals/confirmation-message/confirmation-message.component.css","webpack:///./src/app/components/partials/modals/confirmation-message/confirmation-message.component.html","webpack:///./src/app/components/partials/modals/confirmation-message/confirmation-message.component.ts","webpack:///./src/app/components/partials/modals/update-book/update-book.component.css","webpack:///./src/app/components/partials/modals/update-book/update-book.component.html","webpack:///./src/app/components/partials/modals/update-book/update-book.component.ts","webpack:///./src/app/components/partials/navigation/navigation.component.css","webpack:///./src/app/components/partials/navigation/navigation.component.html","webpack:///./src/app/components/partials/navigation/navigation.component.ts","webpack:///./src/app/components/partials/partials.module.ts","webpack:///./src/app/components/partials/side-menu/side-menu.component.css","webpack:///./src/app/components/partials/side-menu/side-menu.component.html","webpack:///./src/app/components/partials/side-menu/side-menu.component.ts","webpack:///./src/app/components/public/login/login.component.css","webpack:///./src/app/components/public/login/login.component.html","webpack:///./src/app/components/public/login/login.component.ts","webpack:///./src/app/components/public/public.module.ts","webpack:///./src/app/components/public/public.states.ts","webpack:///./src/app/components/public/register/register.component.css","webpack:///./src/app/components/public/register/register.component.html","webpack:///./src/app/components/public/register/register.component.ts","webpack:///./src/app/components/users/dashboard/dashboard.component.css","webpack:///./src/app/components/users/dashboard/dashboard.component.html","webpack:///./src/app/components/users/dashboard/dashboard.component.ts","webpack:///./src/app/components/users/settings/settings.component.css","webpack:///./src/app/components/users/settings/settings.component.html","webpack:///./src/app/components/users/settings/settings.component.ts","webpack:///./src/app/components/users/users.module.ts","webpack:///./src/app/components/users/users.states.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <ui-view name=\\\"sidemenu\\\"></ui-view>\\r\\n  <main>\\r\\n    <ui-view name=\\\"navigation\\\"></ui-view>\\r\\n    <ui-view name=\\\"content\\\"></ui-view>\\r\\n    <ui-view name=\\\"footer\\\"></ui-view>\\r\\n  </main>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Library';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UIRouterModule } from '@uirouter/angular';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { SimpleModalModule } from 'ngx-simple-modal';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UsersModule } from './components/users/users.module';\r\nimport { APP_STATES } from './commons/utils/app.states';\r\nimport { PartialsModule } from './components/partials/partials.module';\r\nimport { DatePipe, DecimalPipe } from '@angular/common';\r\nimport { PublicModule } from './components/public/public.module';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { TokenService } from './commons/services/interceptors/token.service';\r\nimport { BooksModule } from './components/books/books.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    UIRouterModule.forRoot(APP_STATES),\r\n    SimpleModalModule,\r\n    NgbModule.forRoot(),\r\n\r\n    PublicModule,\r\n    PartialsModule,\r\n    UsersModule,\r\n    BooksModule\r\n  ],\r\n  exports : [],\r\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: TokenService, multi: true },\r\n    DatePipe, DecimalPipe, CookieService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { urlsafe } from '../utils/http.utils';\r\n\r\n/* USERS ENDPOINTS\r\n */\r\nexport const USERS = '/api/users/';\r\n\r\n/* AUTH ENDPOINTS\r\n */\r\nexport const AUTH_USER = urlsafe(USERS, 'auth');\r\nexport const AUTH_USER_ID = urlsafe(USERS, 'auth-user');\r\nexport const CHANGE_EMAIL = urlsafe(AUTH_USER, 'email');\r\nexport const AUTH_LOGIN = urlsafe(AUTH_USER, 'login');\r\nexport const AUTH_REGISTER = urlsafe(AUTH_USER, 'register');\r\nexport const NEW_USER = urlsafe(AUTH_USER, 'new-user');\r\n\r\n/* BOOKS ENDPOINTS */\r\nexport const BOOKS = '/api/books/';\r\nexport const OWNED_BOOKS = urlsafe(BOOKS, 'owned-books');\r\nexport const ADD_BOOK = urlsafe(BOOKS, 'add-book');\r\nexport const UPDATE_BOOK = urlsafe(BOOKS, 'update-book');\r\nexport const CHECKOUT_BOOK = urlsafe(BOOKS, 'checkout-book');\r\nexport const IS_CHECKED_OUT = urlsafe(BOOKS, 'is-checked-out');\r\nexport const RETURN_BOOK = urlsafe(BOOKS, 'return-book');\r\nexport const BORROWED_BOOKS = urlsafe(BOOKS, 'borrowed-books');\r\n\r\n/** COMMENTS ENDPOINTS */\r\nexport const COMMENTS = urlsafe(BOOKS, 'comments');\r\nexport const ADD_COMMENT = urlsafe(BOOKS, 'add-comment');\r\nexport const DELETE_COMMENT = urlsafe(BOOKS, 'delete-comment');\r\n","// TODO: make it dynamic. generate every login. (it looks cool)\r\n// 18 random characters (alphanumeric + special characters + token)\r\nexport const AUTH_KEY = 'NCqrSTxQCGMK2wDvRL';\r\n\r\n","import { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\nexport class BookForm {\r\n  public form: FormGroup;\r\n  public err: string = null;\r\n  public submitted: Boolean = false;\r\n\r\n  constructor (data) {\r\n    /* Initialize the form builder\r\n     */\r\n    this.form = new FormBuilder().group({\r\n      title           : new FormControl(data.title, [Validators.required]),\r\n      author          : new FormControl(data.author, [Validators.required]),\r\n      owner           : new FormControl(data.owner),\r\n      is_digital_copy : new FormControl(data.is_digital_copy),\r\n      location        : new FormControl(data.location, [Validators.required]),\r\n      status          : new FormControl(data.status, [Validators.required]),\r\n    });\r\n  }\r\n\r\n  /* Check if form field is valid\r\n   */\r\n  valid (f) {\r\n    return !(!this.form.get(f).valid && this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* Check if the form field has an error\r\n   */\r\n  hasError (f, e) {\r\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* DEFAULT VALUE\r\n   * set the value of the form fields if there is a default value.\r\n   */\r\n  defaultValue (d) {\r\n    // set a timeout just incase that the value is not yet ready.\r\n    this.form.patchValue(d);\r\n  }\r\n\r\n}\r\n\r\nexport class UpdateBookForm {\r\n  public form: FormGroup;\r\n  public err: string = null;\r\n  public submitted: Boolean = false;\r\n\r\n  constructor (data) {\r\n    /* Initialize the form builder\r\n     */\r\n    this.form = new FormBuilder().group({\r\n      id              : new FormControl(data.id),\r\n      title           : new FormControl(data.title, [Validators.required]),\r\n      author          : new FormControl(data.author, [Validators.required]),\r\n      location        : new FormControl(data.location, [Validators.required])\r\n    });\r\n  }\r\n\r\n  /* Check if form field is valid\r\n   */\r\n  valid (f) {\r\n    return !(!this.form.get(f).valid && this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* Check if the form field has an error\r\n   */\r\n  hasError (f, e) {\r\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* DEFAULT VALUE\r\n   * set the value of the form fields if there is a default value.\r\n   */\r\n  defaultValue (d) {\r\n    // set a timeout just incase that the value is not yet ready.\r\n    this.form.patchValue(d);\r\n  }\r\n\r\n}\r\n\r\n","import { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\nexport class CommentForm {\r\n  public form: FormGroup;\r\n  public err: string = null;\r\n  public submitted: Boolean = false;\r\n\r\n  constructor (data) {\r\n    /* Initialize the form builder\r\n     */\r\n    this.form = new FormBuilder().group({\r\n      message       : new FormControl(data.message, [Validators.required]),\r\n      book_id      : new FormControl(data.book_id, [Validators.required]),\r\n      user       : new FormControl(data.user),\r\n    });\r\n  }\r\n\r\n  /* Check if form field is valid\r\n   */\r\n  valid (f) {\r\n    return !(!this.form.get(f).valid && this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* Check if the form field has an error\r\n   */\r\n  hasError (f, e) {\r\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* DEFAULT VALUE\r\n   * set the value of the form fields if there is a default value.\r\n   */\r\n  defaultValue (d) {\r\n    // set a timeout just incase that the value is not yet ready.\r\n    this.form.patchValue(d);\r\n  }\r\n\r\n}\r\n","import { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\n\r\n// Class for edit email form\r\n\r\nexport class EditEmailForm {\r\n    public form: FormGroup;\r\n    public err: string = null;\r\n    public submitted: Boolean = false;\r\n\r\n    constructor (data) {\r\n      /* Initialize the form builder\r\n       */\r\n      this.form = new FormBuilder().group({\r\n          email : new FormControl(null, [Validators.required, Validators.email]),\r\n      });\r\n    }\r\n\r\n    /* Check if form field is valid\r\n     */\r\n    valid (f) {\r\n      return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\r\n    }\r\n\r\n    /* Check if the form field has an error\r\n     */\r\n    hasError (f, e) {\r\n      return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\r\n    }\r\n  }","import * as _ from 'lodash';\r\n\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\nexport class LoginForm {\r\n  public form: FormGroup;\r\n  public err: string = null;\r\n  public submitted: Boolean = false;\r\n\r\n  constructor (data) {\r\n    /* Initialize the form builder\r\n    */\r\n    this.form = new FormBuilder().group({\r\n      email    : new FormControl(null, [Validators.required, Validators.email]),\r\n      password : new FormControl(null, [Validators.required])\r\n    });\r\n  }\r\n\r\n  /* Check if form field is valid\r\n   */\r\n  valid (f) {\r\n    return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\r\n  }\r\n\r\n  /* Check if the form field has an error\r\n   */\r\n  hasError (f, e) {\r\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\r\n  }\r\n\r\n}","import * as _ from 'lodash';\r\n\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\nexport class RegisterForm {\r\n  public form: FormGroup;\r\n  public err: string = null;\r\n  public submitted: Boolean = false;\r\n\r\n  constructor (data) {\r\n    /* Initialize the form builder\r\n    */\r\n    this.form = new FormBuilder().group({\r\n      first_name    : new FormControl(null, [Validators.required]),\r\n      last_name    : new FormControl(null, [Validators.required]),\r\n      email    : new FormControl(null, [Validators.required, Validators.email]),\r\n      username    : new FormControl(null, [Validators.required]),\r\n      password : new FormControl(null, [Validators.required]),\r\n      confirm_password : new FormControl(null, [Validators.required]),\r\n    });\r\n  }\r\n\r\n  /* Check if form field is valid\r\n   */\r\n  valid (f) {\r\n    return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\r\n  }\r\n\r\n  /* Check if the form field has an error\r\n   */\r\n  hasError (f, e) {\r\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\r\n  }\r\n}","import { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\nexport class SearchForm {\r\n    public form: FormGroup;\r\n    public err: string = null;\r\n    public submitted: Boolean = false;\r\n\r\n    constructor (data) {\r\n      /* Initialize the form builder\r\n       */\r\n      this.form = new FormBuilder().group({\r\n          search_text : new FormControl(null, [Validators.required]),\r\n      });\r\n    }\r\n\r\n    /* Check if form field is valid\r\n     */\r\n    valid (f) {\r\n      return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\r\n    }\r\n\r\n    /* Check if the form field has an error\r\n     */\r\n    hasError (f, e) {\r\n      return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\r\n    }\r\n  }","import { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\nexport class UserForm {\r\n  public form: FormGroup;\r\n  public err: string = null;\r\n  public submitted: Boolean = false;\r\n\r\n  constructor (data) {\r\n    /* Initialize the form builder\r\n     */\r\n    this.form = new FormBuilder().group({\r\n      email        : new FormControl(data.email, [Validators.required, Validators.email]),\r\n      first_name   : new FormControl(data.first_name, [Validators.required]),\r\n      last_name    : new FormControl(data.last_name, [Validators.required]),\r\n      username    : new FormControl(data.username, [Validators.required]),\r\n      color : new FormControl(),\r\n    })\r\n  }\r\n\r\n  /* Check if form field is valid\r\n   */\r\n  valid (f) {\r\n    return !(!this.form.get(f).valid && this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* Check if the form field has an error\r\n   */\r\n  hasError (f, e) {\r\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched && this.submitted);\r\n  }\r\n\r\n  /* DEFAULT VALUE\r\n   * set the value of the form fields if there is a default value.\r\n   */\r\n  defaultValue (d) {\r\n    // set a timeout just incase that the value is not yet ready.\r\n    this.form.patchValue(d);\r\n  }\r\n\r\n}\r\n","// export class DeleteCard {\r\n\r\n//     customer_token : string = null;\r\n//     card_token: string = null;\r\n\r\n//     constructor(data={}) {\r\n//       Object.assign(this, data);\r\n//     }\r\n//   }\r\n\r\nexport class Books {\r\n\r\n    title : string = null;\r\n    author: string = null;\r\n    location : string = null;\r\n    is_digital_copy : boolean = null;\r\n    owner: Number = null;\r\n    status : string = null;\r\n\r\n    constructor(data={}) {\r\n      Object.assign(this, data);\r\n    }\r\n}","/* Model class for addPassword\r\n */\r\nexport class CommentModel {\r\n    message : string = null;\r\n    user: string = null;\r\n    book_id: string = null;\r\n\r\n    constructor(data={}) {\r\n        Object.assign(this, data);\r\n    }\r\n}","/* Model class for edit email.\r\n */\r\nexport class EditEmailModel {\r\n\r\n    email: string = null;\r\n\r\n    constructor (data={}) {\r\n      Object.assign(this, data);\r\n    }\r\n};","/* Model class for editPassword\r\n */\r\nexport class EditPasswordModel {\r\n    old_password : string = null;\r\n    new_password : string = null;\r\n    confirm_new_password : string = null;\r\n\r\n    constructor(data={}) {\r\n        Object.assign(this, data);\r\n    }\r\n  }","/* Model class for signing in.\r\n */\r\nexport class Login {\r\n    email    : string = null;\r\n    password : string = null;\r\n\r\n    constructor (data={}) {\r\n      Object.assign(this, data);\r\n    }\r\n  }","/* Model class for signing in.\r\n */\r\nexport class Register {\r\n    email    : string = null;\r\n    first_name    : string = null;\r\n    last_name    : string = null;\r\n    username    : string = null;\r\n    password : string = null;\r\n    confirm_password : string = null;\r\n\r\n    constructor (data={}) {\r\n      Object.assign(this, data);\r\n    }\r\n  }","\r\nexport class SearchModel {\r\n\r\n    search_text: string = null;\r\n\r\n    constructor (data={}) {\r\n      Object.assign(this, data);\r\n    }\r\n};","/* Model class for User */\r\nexport class User {\r\n    id            : string = null;\r\n    email         : string = null;\r\n    username      : string = null;\r\n    first_name    : string = null;\r\n    last_name     : string = null;\r\n    full_name     : string = null;\r\n    has_usable_pass : boolean = null;\r\n    icon         : any = null;\r\n    date_joined  : string = null;\r\n    date_updated : string = null;\r\n    permission   : string = null;\r\n    live_count   : number = null;\r\n    backtest_count: number = null;\r\n\r\n    constructor(data={}) {\r\n      Object.assign(this, data);\r\n    }\r\n}\r\n\r\n\r\nexport class ShortUser {\r\n    id          : string = null;\r\n    email       : string = null; \r\n    username    : string = null;\r\n    first_name  : string = null;\r\n    full_name   : string = null;\r\n    last_name   : string = null;\r\n    avatar       : string = null;\r\n}","import * as _ from 'lodash';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { AUTH_LOGIN, AUTH_USER, AUTH_REGISTER, NEW_USER, AUTH_USER_ID } from '../../constants/api.constants';\r\nimport { AUTH_KEY } from '../../constants/conf.constants';\r\nimport { User } from '../../models/user.model';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  public user = new User;\r\n  public user_id: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n\r\n  /* USER LOGIN\r\n   * @desc : sends a request to the backend server to\r\n   *         to check for the credentials and returns\r\n   *         a generated token.\r\n   */\r\n  login(creds) {\r\n    return this.http.post(AUTH_LOGIN, creds)\r\n      .toPromise()\r\n      .then(resp => { this.setToken(resp); this.authUser(Object(resp).user_id); return resp; })\r\n      .catch(err => { console.log(err); return Promise.reject(err); })\r\n    ;\r\n  }\r\n\r\n  /**REGISTER USER */\r\n  register(creds) {\r\n    return this.http.post(AUTH_REGISTER, creds)\r\n    .toPromise()\r\n    .then(resp => { return resp; })\r\n    .catch(err => { return Promise.reject(err); });\r\n\r\n  }\r\n\r\n  /**NEW USER */\r\n  newUser(creds) {\r\n    return this.http.post(NEW_USER, creds)\r\n    .toPromise()\r\n    .then(resp => { this.setToken(resp); this.authUser(Object(resp).user_id); return resp; })\r\n    .catch(err => { return Promise.reject(err); });\r\n  }\r\n\r\n  /* MANAGE USER TOKEN\r\n   * @desc : manage user token generated from the backend\r\n   *         to be used on authenticated requests\r\n   */\r\n  setToken(token) {\r\n    // save the generated token to the local storage\r\n    (<any>window).localStorage[AUTH_KEY] = JSON.stringify(token);\r\n    return;\r\n  }\r\n\r\n  getToken() {\r\n    // fetch the generated token from the storage\r\n    const d = (<any>window).localStorage[AUTH_KEY];\r\n    if (!d) return null;\r\n    return JSON.parse(d);\r\n  }\r\n\r\n  getUser() {\r\n    this.user_id = this.getToken().user_id;\r\n    if(this.user.id === '') {\r\n      this.authUser(this.user_id);\r\n    }\r\n  }\r\n\r\n  rmToken() {\r\n    // clear the token from the local storage.\r\n    (<any>window).localStorage.clear();\r\n  }\r\n\r\n  /* MANAGE USER INSTANCE\r\n   * @desc : manage user instance.\r\n   */\r\n  authenticated() {\r\n    // check if the user is authenticated\r\n    return this.getToken() ? true : false;\r\n  }\r\n\r\n  setuser() {\r\n    // save the user's instance\r\n    return this.http.get(AUTH_USER)\r\n      .toPromise()\r\n      .then(resp => { this.user = new User(resp); })\r\n      .catch(err => { return Promise.reject(err); })\r\n    ;\r\n  }\r\n\r\n  getuser() {\r\n    // fetch the user instance\r\n    if (this.user.id == null) {\r\n      // sends a request from the backend to\r\n      // get the data.\r\n      this.setuser();\r\n    }\r\n    return this.user;\r\n  }\r\n\r\n  authUser(id) {\r\n   this.http.get(AUTH_USER_ID, {params: {'id': id}}).subscribe(\r\n      result => {\r\n        this.user = new User(result);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AUTH_USER, CHANGE_EMAIL } from '../../constants/api.constants';\r\nimport { User } from '../../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /* USER UPDATE\r\n   * @desc : sends a request to the backend server to update\r\n   *         the user's information.\r\n   */\r\n  update(data) {\r\n    return this.http.post(AUTH_USER, data)\r\n      .toPromise()\r\n      .then(resp => { this.auth.user = new User(resp); return resp; })\r\n      .catch(err => { return Promise.reject(err); })\r\n    ;\r\n  }\r\n\r\n  updateEmail(data){\r\n    return this.http.put(CHANGE_EMAIL, data)\r\n      .toPromise()\r\n      .then(resp => { return resp; } )\r\n      .catch(err => { return Promise.reject(err); })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { \r\n  BOOKS, OWNED_BOOKS, ADD_BOOK, \r\n  CHECKOUT_BOOK, \r\n  COMMENTS,\r\n  ADD_COMMENT,\r\n  DELETE_COMMENT,\r\n  IS_CHECKED_OUT,\r\n  BORROWED_BOOKS,\r\n  RETURN_BOOK,\r\n  UPDATE_BOOK} from '../../constants/api.constants'\r\nimport { Books } from '../../models/book.model'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BooksService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n\r\n  getAllBooks() {\r\n    return this.http.get(BOOKS);\r\n  }\r\n\r\n  getBorrowedBooks() {\r\n    return this.http.get(BORROWED_BOOKS);\r\n  }\r\n\r\n  getOwnedBooks() {\r\n    return this.http.get(OWNED_BOOKS);\r\n  }\r\n\r\n  addBook(data: Books) {\r\n    return this.http.post(ADD_BOOK, data);\r\n  }\r\n\r\n  updateBook(data: Books) {\r\n    return this.http.put(UPDATE_BOOK, data);\r\n  }\r\n\r\n  checkoutBook(data) {\r\n    return this.http.post(CHECKOUT_BOOK, data);\r\n  }\r\n\r\n  getAllComments(book_id) {\r\n    return this.http.get(COMMENTS, { params: {'book_id': book_id}});\r\n  }\r\n\r\n  addComment(data) {\r\n    return this.http.post(ADD_COMMENT, data);\r\n  }\r\n\r\n  deleteComment(data) {\r\n    return this.http.post(DELETE_COMMENT, data);\r\n  }\r\n\r\n  isCheckedOut(book_id) {\r\n    return this.http.get(IS_CHECKED_OUT, { params: {'book_id': book_id}});\r\n  }\r\n\r\n  returnBook(data) {\r\n    return this.http.post(RETURN_BOOK, data);\r\n  }\r\n\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { StateService } from '@uirouter/angular';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private cookie: CookieService\r\n  ) { }\r\n\r\n  intercept (r: HttpRequest<any>, n: HttpHandler) : Observable <HttpEvent <any>> {\r\n    const token = this.auth.getToken();\r\n    if (token == null) {\r\n      r = r.clone({\r\n            setHeaders: {\r\n              'X-CSRFToken'   : this.csrfToken(),\r\n            }\r\n          });\r\n          return n.handle(r).pipe(tap(\r\n            resp => {\r\n              if (resp instanceof HttpResponse) return resp;\r\n            }\r\n          ));\r\n    } else {\r\n      r = r.clone({\r\n            setHeaders: {\r\n              'X-CSRFToken'   : this.csrfToken(),\r\n              'Authorization' : this.token(),\r\n            }\r\n          });\r\n          return n.handle(r).pipe(tap(\r\n            resp => {\r\n              if (resp instanceof HttpResponse) return resp;\r\n            }\r\n          ));\r\n    }\r\n  }\r\n\r\n  // Get user token from the local storage\r\n  // and format if to be placed into the request header.\r\n  token () {\r\n    const t = _.get(this.auth.getToken(), ['token'], null);\r\n    return `Token ${t}`;\r\n  }\r\n\r\n  csrfToken() {\r\n    const xtoken = this.cookie.get('csrftoken');\r\n    return xtoken;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavigationService {\r\n\r\n  public headerTitle = 'Dashboard';\r\n  public hasLoaded = false;\r\n  public isLoading = false;\r\n\r\n  constructor() { }\r\n\r\n  changeHeaderTitle(title) {\r\n    this.headerTitle = title;\r\n  }\r\n}\r\n","import { USER_STATES } from \"src/app/components/users/users.states\";\r\nimport { PUBLIC_STATES } from \"src/app/components/public/public.states\";\r\nimport { BOOK_STATES } from \"src/app/components/books/books.states\";\r\n\r\n\r\nexport const APP_STATES = {\r\n    otherwise : '/login/',\r\n    states    : [].concat(\r\n      USER_STATES,\r\n      PUBLIC_STATES,\r\n      BOOK_STATES,\r\n    )\r\n}\r\n","/* Re-format the URL parameters for\r\n * readbility\r\n */\r\nexport function urlsafe (url, ...params) {\r\n    return url.concat(params.join(\"/\"), '/');\r\n}\r\n\r\nexport function queryparams (data) {\r\n  return \"?\" + Object.keys(data).map(key => `${key}=${encodeURIComponent(data[key])}`).join('&');\r\n}","import { SideMenuComponent } from \"src/app/components/partials/side-menu/side-menu.component\";\r\nimport { NavigationComponent } from \"src/app/components/partials/navigation/navigation.component\";\r\nimport { FooterComponent } from \"src/app/components/partials/footer/footer.component\";\r\n\r\n\r\nexport function ContentOnly(content) {\r\n    return { content: content };\r\n}\r\n\r\nexport function NavContent(content) {\r\n    return {\r\n        sidemenu: SideMenuComponent,\r\n        navigation: NavigationComponent,\r\n        content: content,\r\n        footer: FooterComponent\r\n    }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { AuthService } from '../services/auth/auth.service';\r\nimport { User } from '../models/user.model';\r\n\r\n\r\n/* LOGIN REQUIRED\r\n * @desc : callback function that will check and will not pass\r\n *         users that are not logged in.\r\n */\r\nexport function LoginRequired(t) {\r\n  let auth = t.injector().get(AuthService),\r\n      state = t.router.stateService;\r\n\r\n  if(!auth.authenticated()) return state.target('login');\r\n\r\n}\r\n\r\n\r\n/* DISCONNECT\r\n * @desc : callback function that will log user out.\r\n *         (removes/clear the user token)\r\n */\r\nexport function Disconnect(t) {\r\n  let auth = t.injector().get(AuthService),\r\n      state = t.router.stateService;\r\n\r\n  if(auth.authenticated())\r\n  {\r\n    auth.rmToken();\r\n    auth.user = new User();\r\n  }\r\n  return state.target('login', {next: '/dashboard/'});\r\n\r\n}\r\n\r\nexport function Deactivate(t) {\r\n  let auth = t.injector().get(AuthService),\r\n      state = t.router.stateService;\r\n\r\n  if(auth.authenticated())\r\n  {\r\n    auth.rmToken();\r\n    auth.user = new User();\r\n  }\r\n  return state.target('log-in', {\"deactivate\": true}, {next: '/dashboard/'});\r\n\r\n}\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"dashboard--panel\\\">\\r\\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc non dictum libero. Vestibulum sit amet varius nunc. Sed luctus nisl sed auctor fermentum. Fusce porttitor, orci pharetra dictum laoreet, leo nulla malesuada odio, non dictum ante leo vel magna. Nullam sed dignissim quam. </p>\\r\\n  <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n      <div>\\r\\n          <label>Title:</label>\\r\\n          <input class=\\\"form-control\\\" formControlName=\\\"title\\\" type=\\\"text\\\">\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n          <label>Author:</label>\\r\\n          <input class=\\\"form-control\\\" formControlName=\\\"author\\\" type=\\\"text\\\">\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <label>Location:</label>\\r\\n        <input class=\\\"form-control\\\" formControlName=\\\"location\\\" type=\\\"text\\\">\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <div>\\r\\n          <input type=\\\"checkbox\\\" formControlName=\\\"is_digital_copy\\\">\\r\\n          Is Digital Copy\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <br>\\r\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"this.disable\\\">Save</button>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SimpleModalService } from 'ngx-simple-modal';\r\nimport { BookForm } from 'src/app/commons/forms/books.forms';\r\nimport { Books } from 'src/app/commons/models/book.model';\r\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\r\nimport { BooksService } from 'src/app/commons/services/books/books.service';\r\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\r\nimport { AddBookMessagesComponent } from '../../partials/modals/add-book-messages/add-book-messages.component'\r\n@Component({\r\n  selector: 'app-add-book',\r\n  templateUrl: './add-book.component.html',\r\n  styleUrls: ['./add-book.component.css']\r\n})\r\nexport class AddBookComponent implements OnInit {\r\n\r\n  private form: BookForm;\r\n  private default_status = 'available';\r\n\r\n  constructor(\r\n    private nav: NavigationService,\r\n    private booksService: BooksService,\r\n    private authService: AuthService,\r\n    private simpleModalService: SimpleModalService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.nav.changeHeaderTitle('Add Book');\r\n    this.intializeForm();\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: Books, valid: boolean }) {\r\n    if (valid) {\r\n      this.booksService.addBook(value).subscribe(\r\n        data => {\r\n          this.simpleModalService.addModal(AddBookMessagesComponent, {has_error:false}).subscribe();\r\n          this.intializeForm();\r\n        }, error => {\r\n          this.simpleModalService.addModal(AddBookMessagesComponent, {has_error:true}).subscribe();\r\n          this.intializeForm();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  intializeForm() {\r\n    this.form = new BookForm(new Books);\r\n    this.form.form.controls['status'].setValue(this.default_status);\r\n    this.form.form.controls['is_digital_copy'].setValue(false);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddBookComponent } from './add-book/add-book.component';\r\nimport { BorrowedBooksComponent } from './borrowed-books/borrowed-books.component';\r\nimport { OwnedBooksComponent } from './owned-books/owned-books.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [AddBookComponent, BorrowedBooksComponent, OwnedBooksComponent]\r\n})\r\nexport class BooksModule { }\r\n","import { NavContent } from \"src/app/commons/utils/layout.utils\";\r\nimport { LoginRequired } from \"src/app/commons/utils/security.utils\";\r\nimport { AddBookComponent } from \"./add-book/add-book.component\";\r\nimport { BorrowedBooksComponent } from \"./borrowed-books/borrowed-books.component\";\r\nimport { OwnedBooksComponent } from \"./owned-books/owned-books.component\";\r\n\r\nexport const BOOK_STATES: Object[] = [\r\n    {\r\n        name : 'add-book',\r\n        url  : '/add-book/',\r\n        views:  NavContent(AddBookComponent),\r\n        onEnter: LoginRequired\r\n    },\r\n    {\r\n        name : 'borrowed-books',\r\n        url  : '/borrowed-books/',\r\n        views:  NavContent(BorrowedBooksComponent),\r\n        onEnter: LoginRequired\r\n    },\r\n    {\r\n        name : 'owned-books',\r\n        url  : '/owned-books/',\r\n        views:  NavContent(OwnedBooksComponent),\r\n        onEnter: LoginRequired\r\n    },\r\n]\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"dashboard--panel\\\">\\r\\n    <form class=\\\"form-group\\\" [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n        <div class=\\\"input-group mb-3\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"search_text\\\" class=\\\"form-control\\\" placeholder=\\\"Search Title\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon2\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary\\\" type=\\\"submit\\\"><i class=\\\"la la-search\\\"></i></button>\\r\\n            </div>\\r\\n            <div class=\\\"input-group-append\\\" ngbDropdown>\\r\\n                <button class=\\\"btn btn-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle><i class=\\\"la la-filter\\\"></i> Filter</button>\\r\\n                <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\" >\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\".\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'all')\\\">All</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'available')\\\">Returned</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'checked out')\\\">Checked Out</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n    <div class=\\\"mt-4\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">Book</th>\\r\\n                    <th scope=\\\"col\\\">Location</th>\\r\\n                    <th scope=\\\"col\\\">Status</th>\\r\\n                    <th scope=\\\"col\\\">Owner</th>\\r\\n                    <th scope=\\\"col\\\">Checkout Date</th>\\r\\n                    <th scope=\\\"col\\\">Return Date</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                <tr *ngFor=\\\"let item of books_list\\\" (click)=\\\"rowClicked(item.book)\\\">\\r\\n                    <th scope=\\\"row\\\">\\r\\n                        <p class=\\\"font-weight-bold\\\">{{ item.book.title | titlecase }} </p>\\r\\n                        <small class=\\\"text-muted\\\">by: {{ item.book.author | titlecase }}</small>\\r\\n                    </th>\\r\\n                    <td><p class=\\\"\\\">{{ item.book.location | titlecase }}</p></td>\\r\\n                    <td>\\r\\n                        <p class=\\\"badge badge-pill badge-info\\\"  *ngIf=\\\"item.returned_date !== null\\\"style=\\\"color: white;\\\">\\r\\n                            Returned\\r\\n                        </p>\\r\\n        \\r\\n                        <p class=\\\"badge badge-pill badge-danger\\\"  *ngIf=\\\"item.returned_date === null\\\"style=\\\"color: white;\\\">\\r\\n                            Checked Out\\r\\n                        </p>\\r\\n                    </td>\\r\\n                    <td><p class=\\\"\\\">{{ item.book.owner.full_name | titlecase }}</p></td>\\r\\n                    <td><p class=\\\"\\\">{{ item.checked_out_date | date:\\\"medium\\\" }}</p></td>\\r\\n                    <td>\\r\\n                        <button type=\\\"button\\\" \\r\\n                        class=\\\"btn btn-secondary btn-sm\\\"  \\r\\n                        [hidden]=\\\"item.returned_date !== null\\\" \\r\\n                        (click)=\\\"returnBook($event, item)\\\">\\r\\n                            Return Book\\r\\n                        </button> \\r\\n\\r\\n                        <p class=\\\"\\\" [hidden]=\\\"item.returned_date === null\\\">{{ item.returned_date | date:\\\"medium\\\" }}\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BooksService } from 'src/app/commons/services/books/books.service';\r\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\r\n\r\nimport { SearchForm } from 'src/app/commons/forms/search.forms';\r\nimport { SearchModel } from 'src/app/commons/models/search.model';\r\nimport { SimpleModalService } from 'ngx-simple-modal';\r\nimport { BookDetailsComponent } from '../../partials/modals/book-details/book-details.component';\r\nimport { ConfirmationMessageComponent } from '../../partials/modals/confirmation-message/confirmation-message.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-borrowed-books',\r\n  templateUrl: './borrowed-books.component.html',\r\n  styleUrls: ['./borrowed-books.component.css']\r\n})\r\nexport class BorrowedBooksComponent implements OnInit {\r\n\r\n  private form: SearchForm;\r\n  books_list: any;\r\n  all_books: any;\r\n\r\n  constructor(\r\n    private nav: NavigationService,\r\n    private booksService: BooksService,\r\n    private simpleModalService: SimpleModalService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.nav.changeHeaderTitle('Borrowed Books');\r\n    this.form = new SearchForm(new SearchModel);\r\n\r\n    this.booksService.getBorrowedBooks().subscribe(\r\n      data => {\r\n        this.all_books = data;\r\n        this.books_list = this.all_books;\r\n      }, error => {\r\n        console.log(error)\r\n      }\r\n    )\r\n\r\n\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: SearchModel, valid: boolean }) {\r\n    if (valid) {\r\n      this.books_list = this.all_books.filter(x => x.book.title.toLowerCase().includes(value.search_text.toLowerCase()));\r\n    } else {\r\n      if (value.search_text === '') {\r\n        this.books_list = this.all_books;\r\n      }\r\n    }\r\n  }\r\n\r\n  returnBook(event, item) {\r\n    event.stopPropagation();\r\n    this.simpleModalService.addModal(ConfirmationMessageComponent, {has_error: false}).subscribe(\r\n      (isTrue) => {\r\n        if (isTrue) {\r\n          this.booksService.returnBook({book_id: item.book.id}).subscribe(\r\n            data => {\r\n              item.book.status = 'available';\r\n              item.returned_date = Date.now();\r\n            }, error => {\r\n              console.log(error);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  filterClick(event, status) {\r\n    event.preventDefault();\r\n    if (status === 'all') {\r\n      this.books_list = this.all_books;\r\n    } else if (status === 'digital copy') {\r\n      this.books_list = this.all_books.filter(x => x.book.is_digital_copy === true);\r\n    } else {\r\n      this.books_list = this.all_books.filter(x => x.book.status === status);\r\n    }\r\n\r\n    this.form.form.controls['search_text'].setValue(null);\r\n  }\r\n\r\n  rowClicked(book) {\r\n    this.simpleModalService.addModal(BookDetailsComponent, {\r\n      has_error: false,\r\n      book:book\r\n    })\r\n    .subscribe((isConfirmed)=>{});\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"dashboard--panel\\\">\\r\\n    <form class=\\\"form-group\\\" [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n        <div class=\\\"input-group mb-3\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"search_text\\\" class=\\\"form-control\\\" placeholder=\\\"Search Title\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon2\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary\\\" type=\\\"submit\\\"><i class=\\\"la la-search\\\"></i></button>\\r\\n            </div>\\r\\n            <div class=\\\"input-group-append\\\" ngbDropdown>\\r\\n                <button class=\\\"btn btn-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle><i class=\\\"la la-filter\\\"></i> Filter</button>\\r\\n                <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\" >\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\".\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'all')\\\">All</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'available')\\\">Available</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'checked out')\\\">Checked Out</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'digital copy')\\\">Digital Copy</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n    <div class=\\\"mt-4\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">Book</th>\\r\\n                    <th scope=\\\"col\\\">Location</th>\\r\\n                    <th scope=\\\"col\\\">Status</th>\\r\\n                    <th scope=\\\"col\\\">Owner</th>\\r\\n                    <th scope=\\\"col\\\"></th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                <tr *ngFor=\\\"let book of books_list\\\" (click)=\\\"rowClicked(book)\\\">\\r\\n                    <th scope=\\\"row\\\">\\r\\n                        <p class=\\\"font-weight-bold\\\">{{ book.title | titlecase }} </p>\\r\\n                        <small class=\\\"text-muted\\\">by: {{ book.author | titlecase }}</small>\\r\\n                    </th>\\r\\n                    <td><p class=\\\"\\\">{{ book.location | titlecase }}</p></td>\\r\\n                    <td>\\r\\n                        <p class=\\\"badge badge-pill badge-sm text-block\\\" \\r\\n                            [ngClass]=\\\"{'badge-danger': book.status==='checked out', \\r\\n                            'badge-success': book.status==='available'}\\\" style=\\\"color: white; font-size: 12px;\\\"\\r\\n                            *ngIf=\\\"book.is_digital_copy !== true\\\">\\r\\n                            {{ book.status | titlecase  }}\\r\\n                        </p>\\r\\n\\r\\n                        <p class=\\\"badge badge-pill badge-sm badge-warning text-block\\\" style=\\\"color: white; font-size: 12px;\\\"\\r\\n                            *ngIf=\\\"book.is_digital_copy === true\\\">\\r\\n                            Digital Copy\\r\\n                        </p>\\r\\n                    </td>\\r\\n                    <td><p class=\\\"\\\">{{ book.owner.full_name | titlecase }}</p></td>\\r\\n                    <td>\\r\\n                        <button type=\\\"button\\\" \\r\\n                                class=\\\"btn btn-secondary btn-sm\\\"\\r\\n                                (click)=\\\"updateBook($event, book)\\\">Update</button> \\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SimpleModalService } from 'ngx-simple-modal';\r\nimport { BooksService } from 'src/app/commons/services/books/books.service';\r\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\r\nimport { BookDetailsComponent } from '../../partials/modals/book-details/book-details.component';\r\n\r\nimport { SearchForm } from 'src/app/commons/forms/search.forms';\r\nimport { SearchModel } from 'src/app/commons/models/search.model';\r\nimport { UpdateBookComponent } from '../../partials/modals/update-book/update-book.component';\r\nimport { ConfirmationMessageComponent } from '../../partials/modals/confirmation-message/confirmation-message.component';\r\n\r\n@Component({\r\n  selector: 'app-owned-books',\r\n  templateUrl: './owned-books.component.html',\r\n  styleUrls: ['./owned-books.component.css']\r\n})\r\nexport class OwnedBooksComponent implements OnInit {\r\n\r\n  books_list: any;\r\n  all_books: any;\r\n  private form: SearchForm;\r\n\r\n  constructor(\r\n    private nav: NavigationService,\r\n    private booksService: BooksService,\r\n    private simpleModalService: SimpleModalService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.nav.changeHeaderTitle('Owned Books');\r\n    this.form = new SearchForm(new SearchModel);\r\n\r\n    this.booksService.getOwnedBooks().subscribe(\r\n      data => {\r\n        this.all_books = data;\r\n        this.books_list = this.all_books;\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  filterClick(event, status) {\r\n    event.preventDefault();\r\n    if (status === 'all') {\r\n      this.books_list = this.all_books;\r\n    } else if (status === 'digital copy') {\r\n      this.books_list = this.all_books.filter(x => x.is_digital_copy === true);\r\n    } else {\r\n      this.books_list = this.all_books.filter(x => x.status === status);\r\n    }\r\n\r\n    this.form.form.controls['search_text'].setValue(null);\r\n  }\r\n\r\n  rowClicked(book) {\r\n    this.simpleModalService.addModal(BookDetailsComponent, {\r\n      has_error: false,\r\n      book: book\r\n    })\r\n    .subscribe((isConfirmed) => {\r\n    });\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: SearchModel, valid: boolean }) {\r\n    if (valid) {\r\n      this.books_list = this.all_books.filter(x => x.title.toLowerCase().includes(value.search_text.toLowerCase()));\r\n    } else {\r\n      if (value.search_text === '') {\r\n        this.books_list = this.all_books;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateBook(event, book) {\r\n    event.stopPropagation();\r\n    this.simpleModalService.addModal(UpdateBookComponent, {book: book}).subscribe(\r\n      (bookData) => {\r\n        if (bookData) {\r\n          console.log(bookData)\r\n          this.simpleModalService.addModal(ConfirmationMessageComponent, {has_error: false}).subscribe(\r\n            (isTrue) => {\r\n              if (isTrue) {\r\n                this.booksService.updateBook(bookData).subscribe(\r\n                  data => {\r\n                    const dt = Object(bookData);\r\n                    book.title = bookData.title;\r\n                    book.author = bookData.author;\r\n                    book.location = bookData.location;\r\n                  }, error => {\r\n                    console.log(error);\r\n                  }\r\n                );\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<footer class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n    <small>\\r\\n      <a href=\\\"\\\">© 2021. All Rights Reserved</a>\\r\\n    </small>\\r\\n    <div class=\\\"navbar\\\">\\r\\n      <a href=\\\"\\\">YouTube</a>\\r\\n      <a href=\\\"\\\">Twitter</a>\\r\\n      <a href=\\\"\\\">Instagram</a>\\r\\n      <a href=\\\"\\\">Blog</a>\\r\\n    </div>\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n  <div class=\\\"modal-content\\\" [ngClass]=\\\"{'toast-success': !this.has_error, \\r\\n  'toast-danger': this.has_error}\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h3 *ngIf=\\\"!this.has_error\\\" class=\\\"modal-title\\\" style=\\\"line-height: 0.9\\\">\\r\\n        <i class=\\\"la la-check-circle\\\"></i> Success\\r\\n      </h3>\\r\\n\\r\\n      <h3 *ngIf=\\\"this.has_error\\\" class=\\\"modal-title\\\" style=\\\"line-height: 0.9\\\">\\r\\n        <i class=\\\"la la-times-circle\\\"></i> Danger\\r\\n      </h3>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" >&times;</button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <p *ngIf=\\\"this.has_error\\\">Caught an error while processing your request, please try again.</p>\\r\\n      <p *ngIf=\\\"!this.has_error\\\">Succesfully added a new book you can check it on owned books.</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SimpleModalComponent } from \"ngx-simple-modal\";\r\n\r\nexport interface ConfirmModel {\r\n  has_error: boolean,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-add-book-messages',\r\n  templateUrl: './add-book-messages.component.html',\r\n  styleUrls: ['./add-book-messages.component.css']\r\n})\r\nexport class AddBookMessagesComponent extends SimpleModalComponent<ConfirmModel, boolean> implements OnInit {\r\n  has_error: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      this.close();\r\n    }, 2000);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h3 class=\\\"modal-title\\\" style=\\\"line-height: 0.9\\\">\\r\\n        <b>{{ book.title }}  \\r\\n\\r\\n          <span class=\\\"badge badge-pill badge-sm\\\" \\r\\n            [ngClass]=\\\"{'badge-danger': book.status==='checked out', \\r\\n            'badge-success': book.status==='available'}\\\" style=\\\"color: white; font-size: 12px;\\\"\\r\\n            *ngIf=\\\"book.is_digital_copy !== true\\\">\\r\\n            {{ book.status | titlecase  }}\\r\\n          </span>\\r\\n\\r\\n          <span class=\\\"badge badge-pill badge-sm badge-warning\\\" style=\\\"color: white; font-size: 12px;\\\"\\r\\n            *ngIf=\\\"book.is_digital_copy === true\\\">\\r\\n            Digital Copy\\r\\n          </span>\\r\\n        </b>\\r\\n        <br>\\r\\n        <small class=\\\"text-muted\\\">by {{book.author | titlecase }}</small>\\r\\n      </h3>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" >&times;</button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <p><b>Description:</b> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc non dictum libero. Vestibulum sit amet varius nunc. Sed luctus nisl sed auctor fermentum ...</p>\\r\\n      <p><b>Owned by:</b> {{ book.owner.full_name | titlecase }}</p>\\r\\n      <hr>\\r\\n      \\r\\n      <h6>Comments ({{ comments_list.length }}):</h6>\\r\\n      <div class=\\\"comment-section\\\" style=\\\"max-height: 200px; overflow: auto;\\\">\\r\\n        <div class=\\\"d-flex align-items-center pt-2 pb-3 border-bottom\\\" *ngFor=\\\"let comment of comments_list\\\" >\\r\\n          <img class=\\\"img-sm rounded-circle\\\" src=\\\"static/scripts/fe/src/assets/images/no-prof-img.png\\\" alt=\\\"profile\\\">\\r\\n          <div class=\\\"ml-3\\\" style=\\\"line-height: 0.5;\\\">\\r\\n            <h6 class=\\\"mb-0\\\">\\r\\n\\r\\n              <table>\\r\\n                <tr>\\r\\n                  <td class=\\\"pb-0 pt-0\\\">{{ comment.user.full_name | titlecase }} </td>\\r\\n                  <td class=\\\"pb-0 pt-0\\\"><small class=\\\"text-muted pl-2\\\" style=\\\"font-size: 10px; margin-top: 2px;\\\">{{ comment.date_created | date:'medium' }}</small></td>\\r\\n                  <td class=\\\"pb-0 pt-0\\\"><p></p></td>\\r\\n                  <td class=\\\"pb-0 pt-0\\\">\\r\\n                    <button class=\\\"close float-right\\\" type=\\\"button\\\" (click)=\\\"deleteClick(comment.id)\\\" [hidden]=\\\"comment.user.id!==this.authService.user_id\\\">&times;</button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </h6>\\r\\n            <small class=\\\"text-muted mb-0\\\">{{ comment.message }}</small> <br>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <form class=\\\"form-group\\\" [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n      <input type=\\\"hidden\\\" formControlName=\\\"book_id\\\">\\r\\n      <input type=\\\"hidden\\\" formControlName=\\\"user\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <textarea class=\\\"form-control\\\"  formControlName=\\\"message\\\" placeholder=\\\"Write a comment...\\\"></textarea>\\r\\n        <div class=\\\"input-group-append\\\">\\r\\n          <button class=\\\"btn btn-secondary btn-sm\\\" type=\\\"submit\\\" [disabled]=\\\"this.disable\\\"><i class=\\\"la la-paper-plane\\\"></i></button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  \\r\\n    <div class=\\\"modal-footer\\\" [hidden]=\\\"book.owner.id===this.authService.user_id || book.is_digital_copy === true\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"borrowBook()\\\" [hidden]=\\\"book.status==='checked out'\\\">Check Out</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning btn-block\\\" (click)=\\\"returnBook()\\\" [hidden]='!this.isCheckedOut'>Return Book</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SimpleModalComponent, SimpleModalService } from \"ngx-simple-modal\";\r\nimport { CommentForm } from 'src/app/commons/forms/comment.forms';\r\nimport { CommentModel } from 'src/app/commons/models/comment';\r\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\r\nimport { BooksService } from 'src/app/commons/services/books/books.service';\r\n\r\nimport { ConfirmationMessageComponent } from '../../modals/confirmation-message/confirmation-message.component'\r\nexport interface ConfirmModel {\r\n  has_error: boolean,\r\n  book: any\r\n}\r\n\r\n@Component({\r\n  selector: 'app-book-details',\r\n  templateUrl: './book-details.component.html',\r\n  styleUrls: ['./book-details.component.css']\r\n})\r\nexport class BookDetailsComponent extends SimpleModalComponent<ConfirmModel, boolean> implements OnInit {\r\n\r\n  private form: CommentForm;\r\n  has_error = false;\r\n  book: any;\r\n  comments_list: any;\r\n  isCheckedOut = false;\r\n\r\n  constructor(\r\n    private booksService: BooksService,\r\n    private authService: AuthService,\r\n    private simpleModalService: SimpleModalService\r\n  ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.booksService.getAllComments(this.book.id).subscribe(\r\n      data => {\r\n        this.comments_list = data;\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    this.intializeForm();\r\n\r\n    this.booksService.isCheckedOut(this.book.id).subscribe(\r\n      data => {\r\n        this.isCheckedOut = Object(data).status;\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  confirm() {\r\n    // we set modal result as true on click on confirm button,\r\n    // then we can get modal result from caller code\r\n    this.result = true;\r\n    this.close();\r\n  }\r\n\r\n  borrowBook() {\r\n    this.simpleModalService.addModal(ConfirmationMessageComponent, {has_error: false}).subscribe(\r\n      (isTrue) => {\r\n        if (isTrue) {\r\n          this.booksService.checkoutBook({book_id: this.book.id}).subscribe(\r\n            data => {\r\n              this.book.status = 'checked out';\r\n              this.isCheckedOut = true;\r\n            }, error => {\r\n              console.log(error);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  returnBook() {\r\n    this.simpleModalService.addModal(ConfirmationMessageComponent, {has_error: false}).subscribe(\r\n      (isTrue) => {\r\n        if (isTrue) {\r\n          this.booksService.returnBook({book_id: this.book.id}).subscribe(\r\n            data => {\r\n              this.book.status = 'available';\r\n              this.isCheckedOut = false;\r\n            }, error => {\r\n              console.log(error);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  intializeForm() {\r\n    this.form = new CommentForm(new CommentModel);\r\n    this.form.form.controls['book_id'].setValue(this.book.id);\r\n    this.form.form.controls['user'].setValue(this.authService.user_id);\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: CommentModel, valid: boolean }) {\r\n    if (valid) {\r\n      this.booksService.addComment(value).subscribe(\r\n        data => {\r\n          this.comments_list.unshift(data);\r\n          this.intializeForm();\r\n        }, error => {\r\n          console.log(error);\r\n          this.intializeForm();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  deleteClick(comment_id) {\r\n    this.booksService.deleteComment({'comment_id': comment_id}).subscribe(\r\n      data => {\r\n        this.comments_list = this.comments_list.filter(x => x.id !== comment_id);\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h3 class=\\\"modal-title\\\" style=\\\"line-height: 0.9\\\">\\r\\n        <i class=\\\"la la-question-circle\\\"></i> Action Confirmation\\r\\n      </h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <p>Are you sure?</p>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"  (click)=\\\"cancel()\\\">Decline</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"confirm()\\\">Accept</button>\\r\\n      \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SimpleModalComponent } from \"ngx-simple-modal\";\r\n\r\nexport interface ConfirmModel {\r\n  has_error: boolean,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-confirmation-message',\r\n  templateUrl: './confirmation-message.component.html',\r\n  styleUrls: ['./confirmation-message.component.css']\r\n})\r\nexport class ConfirmationMessageComponent extends SimpleModalComponent<ConfirmModel, boolean> implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  confirm() {\r\n    this.result = true;\r\n    this.close();\r\n  }\r\n\r\n  cancel() {\r\n    this.result = false;\r\n    this.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      Update Book\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" >&times;</button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div>\\r\\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc non dictum libero. Vestibulum sit amet varius nunc. Sed luctus nisl sed auctor fermentum. Fusce porttitor, orci pharetra dictum laoreet, leo nulla malesuada odio, non dictum ante leo vel magna. Nullam sed dignissim quam. </p>\\r\\n        <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n            <div>\\r\\n                <label>Title:</label>\\r\\n                <input class=\\\"form-control\\\" formControlName=\\\"title\\\" type=\\\"text\\\">\\r\\n            </div>\\r\\n      \\r\\n            <div>\\r\\n                <label>Author:</label>\\r\\n                <input class=\\\"form-control\\\" formControlName=\\\"author\\\" type=\\\"text\\\">\\r\\n            </div>\\r\\n      \\r\\n            <div>\\r\\n              <label>Location:</label>\\r\\n              <input class=\\\"form-control\\\" formControlName=\\\"location\\\" type=\\\"text\\\">\\r\\n            </div>\\r\\n            \\r\\n            <br>\\r\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"this.disable\\\">Save</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SimpleModalComponent } from \"ngx-simple-modal\";\r\n\r\nimport { UpdateBookForm } from 'src/app/commons/forms/books.forms';\r\nimport { Books } from 'src/app/commons/models/book.model';\r\nimport { AddBookMessagesComponent } from '../add-book-messages/add-book-messages.component';\r\n\r\nexport interface ConfirmModel {\r\n  book: any\r\n}\r\n\r\n@Component({\r\n  selector: 'app-update-book',\r\n  templateUrl: './update-book.component.html',\r\n  styleUrls: ['./update-book.component.css']\r\n})\r\nexport class UpdateBookComponent extends SimpleModalComponent<ConfirmModel, any> implements OnInit {\r\n\r\n  private form: UpdateBookForm;\r\n  book: any;\r\n\r\n  constructor() {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.intializeForm();\r\n  }\r\n\r\n  intializeForm() {\r\n    this.form = new UpdateBookForm(new Books);\r\n    this.form.defaultValue(this.book);\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: Books, valid: boolean }) {\r\n    if (valid) {\r\n      if (this.form.form.dirty) {\r\n        this.result = value;\r\n      }\r\n      this.close();\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg main-nav\\\">\\r\\n  <div>\\r\\n    <ul class=\\\"navbar-nav \\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link nav-link-active\\\">{{ this.nav.headerTitle }}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"nav-right\\\">\\r\\n    <div class=\\\"profile\\\">\\r\\n      <div class=\\\"profile--avatar no-photo-{{ auth.user.color }}\\\">{{ auth.user.username }}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</nav>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\r\nimport { StateService } from '@uirouter/core';\r\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\r\nimport { User } from 'src/app/commons/models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n\r\n  constructor(\r\n    private state: StateService,\r\n    private nav: NavigationService,\r\n    private auth: AuthService,\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n\r\n    if (this.auth.user.id == null) {\r\n      await this.auth.setuser();\r\n    }\r\n\r\n    this.auth.getUser();\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavigationComponent } from './navigation/navigation.component';\r\nimport { SideMenuComponent } from './side-menu/side-menu.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { BookDetailsComponent } from './modals/book-details/book-details.component';\r\nimport { AddBookMessagesComponent } from './modals/add-book-messages/add-book-messages.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ConfirmationMessageComponent } from './modals/confirmation-message/confirmation-message.component';\r\nimport { UpdateBookComponent } from './modals/update-book/update-book.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgbModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    NavigationComponent,\r\n    SideMenuComponent,\r\n    FooterComponent,\r\n    BookDetailsComponent,\r\n    AddBookMessagesComponent,\r\n    ConfirmationMessageComponent,\r\n    UpdateBookComponent],\r\n  entryComponents: [\r\n    BookDetailsComponent,\r\n    AddBookMessagesComponent,\r\n    ConfirmationMessageComponent,\r\n    UpdateBookComponent\r\n  ],\r\n})\r\nexport class PartialsModule { }\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"sidebar\\\">\\r\\n    <a href=\\\"\\\" class=\\\"nav-brand\\\">\\r\\n        E Library\\r\\n    </a>\\r\\n    <ul class=\\\"sidebar--links navbar-nav\\\">\\r\\n        <li class=\\\"sidebar--item \\\" [ngClass]=\\\"{active: state.includes('dashboard') }\\\">\\r\\n            <a (click)=\\\"onStateChange($event, 'dashboard', 'Dashboard')\\\"><i class=\\\"la la-home\\\"></i>Dashboard</a>\\r\\n        </li>\\r\\n        <li class=\\\"sidebar--item\\\" [ngClass]=\\\"{active: state.includes('add-book') }\\\">\\r\\n            <a (click)=\\\"onStateChange($event, 'add-book', 'Add Book')\\\"><i class=\\\"la la-plus-square\\\"></i>Add a Book</a>\\r\\n        </li>\\r\\n        <li class=\\\"sidebar--item\\\" [ngClass]=\\\"{active: state.includes('borrowed-books') }\\\">\\r\\n            <a (click)=\\\"onStateChange($event, 'borrowed-books', 'Borrowed Books')\\\"><i class=\\\"la la-copy\\\"></i>Borrowed Books</a>\\r\\n        </li>\\r\\n        <li class=\\\"sidebar--item\\\" [ngClass]=\\\"{active: state.includes('owned-books') }\\\">\\r\\n            <a (click)=\\\"onStateChange($event, 'owned-books', 'Owned Books')\\\"><i class=\\\"la la-book\\\"></i>Owned Books</a>\\r\\n        </li>\\r\\n        <li class=\\\"sidebar--item\\\" [ngClass]=\\\"{active: state.includes('settings') }\\\">\\r\\n          <a (click)=\\\"onStateChange($event, 'settings', 'Settings')\\\"><i class=\\\"la la-cogs\\\"></i>Settings</a>\\r\\n        </li>\\r\\n        <li class=\\\"sidebar--item\\\" [ngClass]=\\\"{active: state.includes('logout') }\\\">\\r\\n          <a (click)=\\\"onStateChange($event, 'logout', 'Logout')\\\"><i class=\\\"la la-sign-out-alt\\\"></i>Logout</a>\\r\\n        </li>\\r\\n    </ul>\\r\\n</nav>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { StateService } from '@uirouter/core';\r\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-side-menu',\r\n  templateUrl: './side-menu.component.html',\r\n  styleUrls: ['./side-menu.component.css']\r\n})\r\nexport class SideMenuComponent implements OnInit {\r\n\r\n  constructor(\r\n    private state: StateService,\r\n    private nav: NavigationService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  onStateChange(event, state, header) {\r\n    event.preventDefault();\r\n    this.state.go(state);\r\n    this.nav.changeHeaderTitle(header);\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container p-5\\\">\\r\\n\\r\\n    <h3 class=\\\"section-title mb-3\\\">Login</h3>\\r\\n\\r\\n    <div *ngIf=\\\"hasDeactivated\\\" class=\\\"alert alert-warning\\\">\\r\\n        <p>Your account has been deactivated. Your personal data will be deleted within 48 hours.</p>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"new\\\" class=\\\"alert alert-success\\\">\\r\\n        <p>Successfully created your account</p>\\r\\n    </div>\\r\\n    <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n        <span [hidden]=\\\"!form.err\\\" class=\\\"text-danger\\\">Invalid Email/Password. Please try again.</span>\\r\\n        <div>\\r\\n            <label>Email:</label>\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"email\\\" (input)=\\\"inputChange($event.target.value)\\\" type=\\\"text\\\">\\r\\n            <span *ngIf=\\\"form.hasError('email', 'required')\\\" class=\\\"text-danger\\\"><p><small>Email is required.</small></p></span>\\r\\n            <span *ngIf=\\\"form.hasError('email', 'email')\\\" class=\\\"text-danger\\\"><p><small>Invalid email format.</small></p></span>\\r\\n        </div>\\r\\n        <div>\\r\\n            <label>Password:</label>\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"password\\\" (input)=\\\"inputChange($event.target.value)\\\" type=\\\"password\\\">\\r\\n            <span *ngIf=\\\"form.hasError('password', 'required')\\\" class=\\\"text-danger\\\"><p><small>Password is required.</small></p></span>\\r\\n        </div>\\r\\n        <br>\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Login</button>\\r\\n    </form><br>\\r\\n    \\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <p><a href='.' (click)='register($event)'>Don't have an account?</a></p>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\r\nimport { StateService } from '@uirouter/core';\r\nimport { LoginForm } from 'src/app/commons/forms/login.forms';\r\nimport { Login } from 'src/app/commons/models/login.model';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  private form : LoginForm;\r\n  private isActivated = false;\r\n  private hasError = false;\r\n  private new = false;\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private state: StateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // initialize the form.\r\n    this.form = new LoginForm(new Login);\r\n    if (this.auth.authenticated()) return this.state.go('dashboard');\r\n\r\n    if (this.state.params.new === 'true') {\r\n      this.new = true;\r\n\r\n      setTimeout(() => {\r\n        this.new = false;\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  inputChange(value) {\r\n    if (this.hasError === true) {\r\n      this.hasError = false;\r\n    }\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: Login, valid: boolean }) {\r\n    // send the form data to the backend if the value\r\n    // format are valid.\r\n    this.form.submitted = true;\r\n    if (valid) {\r\n      this.auth.login(value)\r\n        .then(resp => {\r\n          // redirect the user to the last page\r\n          // he/she tried to access before logging in\r\n          try {\r\n            // gets the first matched url\r\n            const prevState = this.state.get().filter(state => state.$$state().url.exec(this.state.params.next));\r\n            console.log(prevState)\r\n            if (prevState.length !== 0) {\r\n              const redirectUrl = prevState.shift().name;\r\n              console.log(redirectUrl)\r\n              if (redirectUrl !== 'login') {\r\n                if (redirectUrl === 'register-login' ) {\r\n                  this.state.go('dashboard');\r\n                } else {\r\n                  this.state.go(redirectUrl);\r\n                }\r\n              } else {\r\n                this.state.go('dashboard');\r\n              }\r\n            } else {\r\n              this.state.go('dashboard');\r\n            }\r\n          } catch (error) {\r\n            this.state.go('login');\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.form.err = err;\r\n        });\r\n      }\r\n    }\r\n\r\n    register(event) {\r\n      event.preventDefault();\r\n      this.state.go('register');\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ],\r\n  declarations: [LoginComponent, RegisterComponent]\r\n})\r\nexport class PublicModule { }\r\n","import { ContentOnly } from \"src/app/commons/utils/layout.utils\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { Disconnect, Deactivate } from \"src/app/commons/utils/security.utils\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\n\r\n\r\nexport const PUBLIC_STATES: Object[] = [\r\n    {\r\n        name: 'login',\r\n        url : '/login/',\r\n        views: ContentOnly(LoginComponent),\r\n        params: { next: window.location.pathname }\r\n    },\r\n    {\r\n        name    : 'register-login',\r\n        url     : '/login/:new',\r\n        views: ContentOnly(LoginComponent),\r\n        params: { next: window.location.pathname }\r\n    },\r\n    {\r\n        name    : 'logout',\r\n        url     : '/logout/',\r\n        onEnter : Disconnect\r\n    },\r\n    {\r\n        name    : 'log-out',\r\n        url     : '/logout/',\r\n        onEnter : Deactivate\r\n    },\r\n    {\r\n        name    : 'log-in',\r\n        url     : '/login/:deactivate',\r\n        views: ContentOnly(LoginComponent),\r\n        params: { next: window.location.pathname }\r\n    },\r\n    {\r\n        name    : 'register',\r\n        url     : '/register/',\r\n        views: ContentOnly(RegisterComponent),\r\n        params: { next: window.location.pathname }\r\n    },\r\n];\r\n","module.exports = \"\"","module.exports = \"<br>\\r\\n<div class=\\\"container p-5\\\">\\r\\n    <h3 class=\\\"section-title mb-3\\\">Register</h3>\\r\\n\\r\\n    <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n        <div>\\r\\n            <label>First Name:</label>\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"first_name\\\" type=\\\"text\\\">\\r\\n            <span [hidden]=\\\"form.valid('first_name')\\\" class=\\\"text-danger\\\"><p><small>First name is required.</small></p></span>\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n            <label>Last Name:</label>\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"last_name\\\" type=\\\"text\\\">\\r\\n            <span [hidden]=\\\"form.valid('last_name')\\\" class=\\\"text-danger\\\"><p><small>Last name is required.</small></p></span>\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n          <label>Username:</label>\\r\\n          <br>\\r\\n          <small>Please note that you cannot change your username after sign up.</small>\\r\\n          <input class=\\\"form-control\\\" formControlName=\\\"username\\\" (input)=\\\"usernameInputChange($event.target.value)\\\" type=\\\"text\\\">\\r\\n          <span [hidden]=\\\"form.valid('username')\\\" class=\\\"text-danger\\\"><p><small>Username is required.</small></p></span>\\r\\n          <span *ngIf=\\\"this.hasUsernameError\\\" class=\\\"text-danger\\\"><p><small>{{ this.usernameErr }}</small></p></span>\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n            <label>Email:</label>\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"email\\\" (input)=\\\"emailInputChange($event.target.value)\\\" type=\\\"text\\\">\\r\\n            <span *ngIf=\\\"form.hasError('email', 'required')\\\" class=\\\"text-danger\\\"><p><small>Email is required.</small></p></span>\\r\\n            <span *ngIf=\\\"form.hasError('email', 'email')\\\" class=\\\"text-danger\\\"><p><small>Invalid email format.</small></p></span>\\r\\n            <span *ngIf=\\\"this.hasEmailError\\\" class=\\\"text-danger\\\"><p><small>{{ this.emailErr }}</small></p></span>\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n            <label>Password:</label>\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"password\\\" (input)=\\\"passwordInputChange($event.target.value)\\\" type=\\\"password\\\">\\r\\n            <span *ngIf=\\\"this.mismatchedPassword\\\" class=\\\"text-danger\\\"><p><small>{{ this.passwordErr }}</small></p></span>\\r\\n            <span [hidden]=\\\"form.valid('password')\\\" class=\\\"text-danger\\\"><p><small>Password is required.</small></p></span>\\r\\n        </div>\\r\\n        <div>\\r\\n            <label>Confirm Password:</label>\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"confirm_password\\\" (input)=\\\"passwordInputChange($event.target.value)\\\" type=\\\"password\\\">\\r\\n            <span *ngIf=\\\"this.mismatchedPassword\\\" class=\\\"text-danger\\\"><p><small>{{ this.passwordErr }}</small></p></span>\\r\\n            <span [hidden]=\\\"form.valid('confirm_password')\\\" class=\\\"text-danger\\\"><p><small>Password is required.</small></p></span>\\r\\n      </div>\\r\\n        <br>\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"this.disable\\\">Register</button>\\r\\n    </form>\\r\\n\\r\\n    <div class=\\\"form-group text-center mt-5\\\">\\r\\n        <p><a (click)='redirectLogin()'>Back to Home</a></p>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { RegisterForm } from 'src/app/commons/forms/register.forms';\r\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\r\nimport { StateService } from '@uirouter/core';\r\nimport { Register } from 'src/app/commons/models/register.model';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  private form: RegisterForm;\r\n  private usernameErr = '';\r\n  private emailErr = '';\r\n  private passwordErr = '';\r\n  private hasEmailError = false;\r\n  private hasUsernameError = false;\r\n  private mismatchedPassword = false;\r\n  private disable = false;\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private state: StateService\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.form = new RegisterForm(new Register);\r\n  }\r\n\r\n  usernameInputChange(value) {\r\n    if (this.hasUsernameError === true) {\r\n      return this.hasUsernameError = false;\r\n    }\r\n  }\r\n\r\n  emailInputChange(value) {\r\n    if (this.hasEmailError === true) {\r\n      return this.hasEmailError = false;\r\n    }\r\n  }\r\n\r\n  passwordInputChange(value) {\r\n    if (this.mismatchedPassword === true) {\r\n      return this.mismatchedPassword = false;\r\n    }\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: Register, valid: boolean }) {\r\n    // send the form data to the backend if the value\r\n    // format are valid.\r\n    this.form.submitted = true;\r\n    if (valid) {\r\n      this.disable = true;\r\n      this.auth.register(value)\r\n        .then(resp => {\r\n          this.state.go('register-login', {'new': true});\r\n        })\r\n        .catch(err => {\r\n          this.form.err = err.error;\r\n          this.disable = false;\r\n          if (err.error.email) {\r\n            this.emailErr = err.error.email;\r\n            this.hasEmailError = true;\r\n          }\r\n\r\n          if (err.error.username) {\r\n            this.usernameErr = err.error.username;\r\n            this.hasUsernameError = true;\r\n          }\r\n\r\n          if (err.error.non_field_errors) {\r\n            this.passwordErr = err.error.non_field_errors;\r\n            this.mismatchedPassword = true;\r\n          }\r\n        })\r\n      ;\r\n    } else {\r\n      this.disable = false;\r\n      this.form.err = '';\r\n    }\r\n  }\r\n\r\n  redirectLogin() {\r\n    if (this.auth.authenticated()) {\r\n      this.state.go('logout');\r\n    } else {\r\n      this.state.go('login');\r\n    }\r\n  }\r\n}\r\n","module.exports = \".text-block {\\r\\n    position: absolute;\\r\\n    bottom: 90px;\\r\\n    right: 30px;\\r\\n}\"","module.exports = \"<div class=\\\"dashboard--panel\\\">\\r\\n    <form class=\\\"form-group\\\" [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\r\\n        <div class=\\\"input-group mb-3\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"search_text\\\" class=\\\"form-control\\\" placeholder=\\\"Search Title\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon2\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary\\\" type=\\\"submit\\\"><i class=\\\"la la-search\\\"></i></button>\\r\\n            </div>\\r\\n            <div class=\\\"input-group-append\\\" ngbDropdown>\\r\\n                <button class=\\\"btn btn-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle><i class=\\\"la la-filter\\\"></i> Filter</button>\\r\\n                <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\" >\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\".\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'all')\\\">All</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'available')\\\">Available</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'checked out')\\\">Checked Out</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ngbDropdownItem (click)=\\\"filterClick($event, 'digital copy')\\\">Digital Copy</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n    <div class=\\\"mt-5\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-3\\\" *ngFor=\\\"let book of books_list\\\" (click)=\\\"rowClicked(book)\\\">\\r\\n                <div class=\\\"card mb-5\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <img src=\\\"static/scripts/fe/src/assets/images/no-cover-img.jpg\\\" class=\\\"card-img-top mb-3\\\" alt=\\\"...\\\">\\r\\n\\r\\n                        <span class=\\\"badge badge-pill badge-sm text-block\\\" \\r\\n                            [ngClass]=\\\"{'badge-danger': book.status==='checked out', \\r\\n                            'badge-success': book.status==='available'}\\\" style=\\\"color: white; font-size: 12px;\\\"\\r\\n                            *ngIf=\\\"book.is_digital_copy !== true\\\">\\r\\n                            {{ book.status | titlecase  }}\\r\\n                        </span>\\r\\n\\r\\n                        <span class=\\\"badge badge-pill badge-sm badge-warning text-block\\\" style=\\\"color: white; font-size: 12px;\\\"\\r\\n                            *ngIf=\\\"book.is_digital_copy === true\\\">\\r\\n                            Digital Copy\\r\\n                        </span>\\r\\n\\r\\n                        <h5 class=\\\"card-title mb-0\\\">\\r\\n                            {{ book.title | titlecase }}\\r\\n                        </h5>\\r\\n                        <small class=\\\"text-muted mt-0\\\">by: {{ book.author | titlecase }} </small>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { StateService } from '@uirouter/core';\r\n// import { DatePipe } from '@angular/common';\r\nimport { TitleCasePipe } from '@angular/common';\r\n\r\nimport { SearchForm } from 'src/app/commons/forms/search.forms';\r\nimport { SearchModel } from 'src/app/commons/models/search.model';\r\n\r\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\r\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\r\nimport { UserService } from 'src/app/commons/services/auth/user.service';\r\nimport { BooksService } from 'src/app/commons/services/books/books.service';\r\nimport { SimpleModalService } from \"ngx-simple-modal\";\r\n\r\nimport { BookDetailsComponent } from '../../partials/modals/book-details/book-details.component'\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  books_list: any;\r\n  all_books: any;\r\n  private form: SearchForm;\r\n\r\n  constructor(\r\n    private nav: NavigationService,\r\n    private auth: AuthService,\r\n    private state: StateService,\r\n    private booksService: BooksService,\r\n    private simpleModalService: SimpleModalService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n\r\n    this.nav.changeHeaderTitle('Dashboard');\r\n    this.form = new SearchForm(new SearchModel);\r\n\r\n    setTimeout(() => {\r\n      this.nav.hasLoaded = false;\r\n    }, 100);\r\n\r\n    this.auth.getUser();\r\n\r\n    if (this.auth.user.id == null) {\r\n      // get user information from the backend. (sync)\r\n      await this.auth.setuser();\r\n    }\r\n\r\n    this.booksService.getAllBooks().subscribe(\r\n      data => {\r\n        this.all_books = data;\r\n        this.books_list = this.all_books;\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: SearchModel, valid: boolean }) {\r\n    if (valid) {\r\n      this.books_list = this.all_books.filter(x => x.title.toLowerCase().includes(value.search_text.toLowerCase()));\r\n    } else {\r\n      if (value.search_text === '') {\r\n        this.books_list = this.all_books;\r\n      }\r\n    }\r\n  }\r\n\r\n  rowClicked(book) {\r\n    this.simpleModalService.addModal(BookDetailsComponent, {\r\n      has_error: false,\r\n      book: book\r\n    })\r\n    .subscribe((isConfirmed) => {\r\n    });\r\n  }\r\n\r\n  filterClick(event, status) {\r\n    event.preventDefault();\r\n    if (status === 'all') {\r\n      this.books_list = this.all_books;\r\n    } else if (status === 'digital copy') {\r\n      this.books_list = this.all_books.filter(x => x.is_digital_copy === true);\r\n    } else {\r\n      this.books_list = this.all_books.filter(x => x.status === status);\r\n    }\r\n\r\n    this.form.form.controls['search_text'].setValue(null);\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"dashboard--panel\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n          <div class=\\\"panel--white\\\">\\r\\n              <div class=\\\"panel__header\\\">\\r\\n                <div class=\\\"panel-label\\\"><i class=\\\"fa fa-newspaper-o m-1\\\"></i>Profile</div>\\r\\n              </div>\\r\\n              <div class=\\\"panel__content\\\">\\r\\n                  <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\" class=\\\"form\\\" enctype=\\\"multipart/form-data\\\">\\r\\n                    <div [hidden]=\\\"!this.editSuccessMessage\\\" class=\\\"alert alert-success\\\"><p>You have successfully updated your info!</p></div>\\r\\n                    <div *ngIf=\\\"!this.ProfNoChanges\\\" class=\\\"alert alert-info\\\"><p>No Changes!</p></div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col mb-5\\\">\\r\\n                            <label>First Name</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"first_name\\\"  placeholder=\\\"First name\\\">\\r\\n                            <span [hidden]=\\\"form.valid('first_name')\\\" class=\\\"text-danger\\\"><p><small>This field is required.</small></p></span>\\r\\n                            <label>Username</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" (input)=\\\"usernameInputChange($event.target.value)\\\" placeholder=\\\"Username\\\" disabled>\\r\\n                            <small class='text-muted'>Please note that you cannot change your username after sign up.</small><br><br>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <label>Last Name</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"last_name\\\" placeholder=\\\"Last name\\\">\\r\\n                            <span [hidden]=\\\"form.valid('last_name')\\\" class=\\\"text-danger\\\"><p><small>This field is required.</small></p></span>\\r\\n\\r\\n                            <label>E-mail</label>\\r\\n\\r\\n                            <div [ngSwitch]=\\\"switchExpression\\\" class=\\\"email-field\\\">\\r\\n                                <div *ngSwitchDefault>\\r\\n                                  <div>\\r\\n                                    <div class=\\\"bold mt-2\\\"><p>{{ form.form.value.email }} <a href=\\\"\\\" (click)=\\\"changeEmailClick($event)\\\" class=\\\"text-right bold text-muted\\\"><small>Change Email</small></a></p></div>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                                <div *ngSwitchCase=\\\"'change_email'\\\">\\r\\n                                  <div class=\\\"bold mt-2\\\"><p>{{ form.form.value.email }}</p></div>\\r\\n\\r\\n                                  <form [formGroup]=\\\"edit_email_form.form\\\" (ngSubmit)=\\\"onEditEmailSubmit(edit_email_form.form)\\\">\\r\\n                                    <p>Change Email</p>\\r\\n                                    <span *ngIf=\\\"this.emailHasError\\\" class=\\\"text-danger\\\"><p>This email is already used.</p></span>\\r\\n                                    <span *ngIf=\\\"this.emailNoChanges\\\" class=\\\"text-danger\\\"><p>Nothing Changed</p></span>\\r\\n\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                      <label>New Email</label>\\r\\n                                      <input class=\\\"form-control\\\" formControlName=\\\"email\\\" (input)=\\\"emailInputChange($event.target.value)\\\" type=\\\"text\\\">\\r\\n                                      <span *ngIf=\\\"edit_email_form.form.hasError('email', 'required')\\\" class=\\\"text-danger\\\"><p><small>This field is required.</small></p></span>\\r\\n                                      <span *ngIf=\\\"edit_email_form.form.hasError('email', 'email')\\\" class=\\\"text-danger\\\"><p><small>Invalid email format.</small></p></span>\\r\\n                                      <span *ngIf=\\\"edit_email_form.form.hasEmailError\\\" class=\\\"text-danger\\\"><p><small>{{ this.emailErr }}</small></p></span>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"d-flex justify-content-between\\\">\\r\\n                                      <button (click)=\\\"cancelEmailEvent()\\\" class=\\\"btn-sm btn-light\\\">Cancel</button>\\r\\n                                      <button class=\\\"btn-sm btn-primary\\\" [disabled]=\\\"this.emailbtn_disabled\\\">Update Email</button>\\r\\n                                    </div>\\r\\n                                  </form>\\r\\n                                </div>\\r\\n\\r\\n                                <!-- CHANGE EMAIL -- SUCCESS -->\\r\\n                                <div *ngSwitchCase=\\\"'edit_email_success'\\\">\\r\\n                                  <p>Congratulations! You’ve successfully updated your email.</p>\\r\\n                                  <div class=\\\"text-right\\\">\\r\\n                                    <a href=\\\"\\\" (click)=\\\"changeEmailClick($event)\\\" class=\\\"text-right bold changePw\\\">Change Email</a>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <button class=\\\"btn-custom-lg btn-primary\\\">Update Profile</button>\\r\\n                    <button class=\\\"btn-custom-lg btn-light\\\">Cancel</button>\\r\\n\\r\\n                </form>\\r\\n              </div>\\r\\n\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { NavigationService } from 'src/app/commons/services/navigation/navigation.service';\r\nimport { UserForm } from 'src/app/commons/forms/user.forms';\r\nimport { EditEmailForm } from 'src/app/commons/forms/email.forms';\r\nimport { User } from 'src/app/commons/models/user.model';\r\nimport { EditPasswordModel } from 'src/app/commons/models/edit-password.model';\r\nimport { EditEmailModel } from 'src/app/commons/models/edit-email.model';\r\nimport { AuthService } from 'src/app/commons/services/auth/auth.service';\r\nimport { StateService } from '@uirouter/core';\r\nimport { UserService } from 'src/app/commons/services/auth/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  /* Form Intialization */\r\n  private form: UserForm;\r\n  private edit_email_form: EditEmailForm;\r\n\r\n  private file: File | null = null;\r\n  private date: Date = new Date;\r\n\r\n  private checkPass : boolean;\r\n  private switchExpression: string;\r\n  private switchExpression1: string;\r\n  private errorString:string;\r\n  private token: string;\r\n\r\n  private editSuccessMessage = false;\r\n  private usernameHasError = false;\r\n\r\n  private emailNoChanges = false;\r\n  private emailHasError = false;\r\n\r\n  private passbtn_disable = false;\r\n  private deacbtn_disable = false;\r\n  private emailbtn_disabled = false;\r\n  private ProfNoChanges = true;\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private state: StateService,\r\n    private user: UserService,\r\n    private nav: NavigationService,\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    // initialize the form.\r\n    this.switchExpression = null;\r\n    this.form = new UserForm(new User);\r\n    this.edit_email_form = new EditEmailForm(new EditEmailModel);\r\n\r\n    setTimeout(() => {\r\n      this.nav.hasLoaded = false;\r\n    }, 100);\r\n\r\n    if (this.auth.user.id == null) {\r\n      // get user information from the backend. (sync)\r\n      await this.auth.setuser();\r\n    }\r\n\r\n    this.auth.getUser();\r\n    this.token = this.auth.getToken().token;\r\n\r\n    this.nav.changeHeaderTitle('Settings');\r\n\r\n    this.form.defaultValue(this.auth.user);\r\n    this.checkPass = this.auth.user.has_usable_pass;\r\n\r\n  }\r\n\r\n  emailInputChange(value) {\r\n    if (this.emailHasError === true) {\r\n      return this.emailHasError = false;\r\n    }\r\n\r\n    if (this.emailNoChanges === true) {\r\n      return this.emailNoChanges = false;\r\n    }\r\n  }\r\n\r\n  usernameInputChange(value) {\r\n    if (this.usernameHasError === true) {\r\n      this.usernameHasError = false;\r\n    }\r\n  }\r\n\r\n  @HostListener('change', ['$event.target.files']) emitFiles( event: FileList ) {\r\n    const file = event && event.item(0);\r\n    this.file = file;\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: User, valid: boolean }) {\r\n    // initiate submission of form.\r\n    this.form.submitted = true;\r\n    // send the form data to the backend if the value\r\n    // format are valid.\r\n    if (valid ) {\r\n      if (this.form.form.dirty) {\r\n        this.user.update(value)\r\n        .then(resp => {\r\n          this.form.err = '';\r\n          this.state.go('user-settings');\r\n          this.editSuccessMessage = true;\r\n          this.ProfNoChanges = true;\r\n\r\n          setTimeout(() => {\r\n            this.editSuccessMessage  = false;\r\n          }, 3000);\r\n        })\r\n        .catch(err => {\r\n          this.form.err = err.error.username;\r\n          if (err.error.username) {\r\n            this.usernameHasError = true;\r\n          }\r\n        });\r\n      } else {\r\n        this.ProfNoChanges = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  onEditEmailSubmit({value, valid}: {value: EditEmailForm, valid: boolean}) {\r\n    // initiate submission of form.\r\n    this.edit_email_form.submitted = true;\r\n    // send the form data to the backend if the value\r\n    // format are valid.\r\n    if (value['email'] === this.auth.user.email) {\r\n      this.emailNoChanges = true;\r\n    } else {\r\n      this.emailNoChanges = false;\r\n      if (valid) {\r\n        this.emailbtn_disabled = true;\r\n        this.user.updateEmail(value)\r\n          // initialize switchExpression to redirect to success view\r\n          // re initialize edit password form to empty fields\r\n          .then(resp => {\r\n            this.switchExpression = 'edit_email_success';\r\n            this.edit_email_form = new EditEmailForm(new EditPasswordModel);\r\n            this.form.form.value.email = value['email'];\r\n            this.auth.user.email = this.form.form.value.email;\r\n          })\r\n          .catch(err => {\r\n            this.edit_email_form.err = err.error.email;\r\n            if (this.edit_email_form.err) {\r\n              this.emailHasError = true;\r\n              this.emailbtn_disabled = false;\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  changeEmailClick($event) {\r\n    // prevent href default behavior\r\n    $event.preventDefault();\r\n    // initialize switchExpression to redirect to change password form\r\n    this.switchExpression = 'change_email';\r\n\r\n    if (this.emailbtn_disabled === true) {\r\n      this.emailbtn_disabled = false;\r\n    }\r\n  }\r\n\r\n  cancelEmailEvent() {\r\n    // re initialize edit email and add email form to empty fields\r\n    this.edit_email_form = new EditEmailForm(new EditEmailModel);\r\n\r\n    // initialize switchExpression to redirect to default view\r\n    this.switchExpression = '';\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [SettingsComponent, DashboardComponent]\r\n})\r\nexport class UsersModule { }\r\n","import { NavContent } from \"src/app/commons/utils/layout.utils\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { LoginRequired } from \"src/app/commons/utils/security.utils\";\r\nimport { SettingsComponent } from \"./settings/settings.component\";\r\n\r\n\r\nexport const USER_STATES: Object[] = [\r\n    {\r\n        name : 'dashboard',\r\n        url  : '/dashboard/',\r\n        views:  NavContent(DashboardComponent),\r\n        onEnter: LoginRequired\r\n    },\r\n    {\r\n        name : 'dashboard-activated',\r\n        url  : '/dashboard/:activated',\r\n        views:  NavContent(DashboardComponent),\r\n        onEnter: LoginRequired\r\n    },\r\n    {\r\n        name : 'settings',\r\n        url  : '/settings/',\r\n        views:  NavContent(SettingsComponent),\r\n        onEnter: LoginRequired\r\n    },\r\n\r\n]","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  pusher: {\r\n    key: 'df021952df2cbae64372',\r\n    cluster: 'ap1',\r\n  },\r\n  stripe: {\r\n    key:'pk_test_yHHb0DcZ0ZkP1oLLAJxfWqyI00HH3wLgTf'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}